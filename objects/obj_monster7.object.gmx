<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_monsterSentry</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>par_sentry</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>helth=30
maxhelth=helth
phelth=helth
damage=.05

canmove=true

_color=c_red

image_speed=0
image_index=1

fire=false
image_xscale=1
image_yscale=1

image_angle=random(360)

playflame=false

laser_x=0
laser_y=0
laser_x2=0
laser_y2=0
FIRE=false


monsterid=-1
pid=7
key=false
freeze=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>nn=instance_create(x,y,obj_monsterdead)
nn.sprite_index=sprite_index
nn.image_xscale=image_xscale
nn.image_yscale=image_yscale


if playflame=true{
    if audio_is_playing(snd_flamethrower){
        audio_stop_sound(snd_flamethrower)
        playflame=false
    }
}
audio_play_sound(snd_sentryexplode,2,0)

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>FIRE=false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if phelth&gt;helth+2{
    nn=instance_create(x,y,obj_hitnumber)
    nn.number=round(phelth-helth)
    phelth=helth
}

if canmove=true{
    if !instance_exists(obj_client){
        if helth&lt;=0{
            audio_stop_sound(snd_laser)
            instance_destroy()
            exit
        }
    }
    ////ONLINE////
    var obj_player1=-1
    if instance_exists(obj_client2){
        obj_player1=obj_client2
    }else{
        obj_player1=obj_player
    }
    
    if point_distance(x,y,obj_player.x,obj_player.y)&lt;point_distance(x,y,obj_player1.x,obj_player1.y){
        playerx=obj_player.x
        playery=obj_player.y
        player=obj_player
    }else{
        playerx=obj_player1.x
        playery=obj_player1.y
        player=obj_player1
    }
    var dir=point_direction(x,y,playerx,playery)
    if point_distance(x,y,playerx,playery)&lt;100
    &amp;&amp; collision_line(x+lengthdir_x(5,dir),y+lengthdir_y(5,dir),x+lengthdir_x(50,dir),y+lengthdir_y(50,dir),par_block,0,0)&lt;=0{
    event_user(0)
    if collision_line(x+lengthdir_x(5,dir),y+lengthdir_y(5,dir),x+lengthdir_x(50,dir),y+lengthdir_y(50,dir),par_block,0,0)=player.id{
        player.helth--
    }
    if playflame=false{
        audio_play_sound(snd_laser,5,99)
        playflame=true
    }
    if playflame=true &amp;&amp; !audio_is_playing(snd_laser){
        audio_play_sound(snd_flamethrower,5,999)
    }
    image_angle=dir_tron(image_angle, dir,  3);
    }else{
        if playflame=true{
            if audio_is_playing(snd_laser){
                audio_stop_sound(snd_laser)
                playflame=false
            }
        }
    }
}else{
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///fire
with(instance_create(x+11*sin(degtorad(image_angle)),y+11*cos(degtorad(image_angle)),objLaser_messenger)){
    //move_contact_solid((arccos((x*(other.x+11*sin(degtorad(other.image_angle)))+y*(other.y+11*cos(degtorad(image_angle))))/(sqrt((x*(other.x+11*sin(degtorad(other.image_angle)))))*sqrt((y*(other.y+11*cos(degtorad(other.image_angle)))))))),800)
     move_contact_solid(other.image_angle,800)
    other.laser_x=x; 
    other.laser_y=y; 
    instance_destroy(); 
}
with(instance_create(x-11*sin(degtorad(image_angle-180)),y+11*cos(degtorad(image_angle-180)),objLaser_messenger)){
    move_contact_solid(other.image_angle,800)
    other.laser_x2=x; 
    other.laser_y2=y; 
    instance_destroy(); 
}
FIRE=true
alarm[0]=1


////ONLINE/////
var obj_player1=-1;
if instance_exists(obj_client2){
    obj_player1=obj_client2
}else{
    obj_player1=obj_player
}

if point_distance(x,y,obj_player.x,obj_player.y)&lt;point_distance(x,y,obj_player1.x,obj_player1.y){
    player=obj_player
}else{
    if instance_exists(obj_client2){player=obj_client2}else{player=obj_player}
}

if collision_line(x+11*sin(degtorad(image_angle)),y+11*cos(degtorad(image_angle)),laser_x,laser_y,player,0,1)=player.id{
   if player=obj_player{obj_control.player_health-=0.25}
}

if collision_line(x-11*sin(degtorad(image_angle-180)),y+11*cos(degtorad(image_angle-180)),laser_x2,laser_y2,player,0,1)=player.id{
    if player=obj_player{obj_control.player_health-=0.25}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if FIRE=true{
    draw_set_color(c_red)
    draw_set_alpha(1)
    draw_line_width(x+11*sin(degtorad(image_angle)),y+11*cos(degtorad(image_angle)),laser_x,laser_y,2)
    draw_line_width(x+11*sin(degtorad(image_angle+180)),y+11*cos(degtorad(image_angle+180)),laser_x2,laser_y2,2)
    //FIRE=false
}
draw_sprite_ext(spr_sentryBase,0,x,y,image_xscale,image_yscale,0,c_white,1)
draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle-90,image_blend,image_alpha)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
