<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>-1</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0]=1
phelth=0


crack=0
pcrack=0

/*
if window_get_fullscreen()=true{
    visible=true
}*/


r=16
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(par_block){
    if id!=other.id{
        if point_distance(x,y,other.x,other.y)&lt;32{
            alarm[0]=1
        }
    }
}
obj_control.alarm[9]=2
if gamepad_get_device_count()&gt;0
&amp;&amp; check_padpress()=true{
    gamepad_set_vibration(0,1,1)
    obj_pause.alarm[0]=5
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///re-calc drawing surface
/*
if instance_exists(obj_controlshell){
    with(obj_controlshell){
        if surface_exists(surface){
            surface_free(surface)
            surface=surface_create(view_wview,view_hview)
        }
    }
    
    instance_activate_object(par_shell)
    with(par_shell){
        if place_meeting(x,y+1,other.id){
            
        }else{
            //instance_deactivate_object(id)
        }
    }
}*/




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_server){
    clearbuffer()
    writebyte(21)
    writebyte(2)//destroy
    writeshort(x+8)
    writeshort(y+8)
    sendmessage(global.clienttcp)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///remove from coll mask

var xx=round(x/8);
var yy=round(y/8);
if xx&gt;=0 &amp;&amp; yy&gt;=0
&amp;&amp; xx&lt;round(room_width/8)
&amp;&amp; yy&lt;round(room_height/8){
    obj_control._Floor[xx,yy]=0
    obj_control._Floor[xx+1,yy]=0
    obj_control._Floor[xx,yy+1]=0
    obj_control._Floor[xx+1,yy+1]=0
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Block+Blood
if global.BLOOD=true &amp;&amp; BLOOD2=true{
    if surface_exists(global.surface_blood){
        if view_current == 0
            {
        draw_enable_alphablend(1)
        surface_set_target(global.surface_blood);
        draw_set_alpha(1)
        draw_set_color(c_white)
        draw_surface(global.surface_blood,0,0);
        draw_set_blend_mode(bm_subtract)
        draw_sprite_ext(sprite_index,0,x-4,y-4,1.5,1.5,0,c_white,1);
        draw_set_blend_mode(bm_normal);
        surface_reset_target();
        }
    }
}
/*
if surface_exists(obj_control.BlockSurface){
    //surface_free(obj_control.BlockSurface)
    //obj_control.BlockSurface = surface_create(480,272);
    draw_clear_alpha(c_white,0)
    surface_set_target(obj_control.BlockSurface)
    draw_set_blend_mode(bm_subtract)
    draw_self()
    //with(par_block){if other.id!=id{draw_self()}}
    draw_set_blend_mode(bm_normal);
    surface_reset_target()
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if place_meeting2(object_index,x+16,y)
&amp;&amp; !place_meeting2(object_index,x-9,y)
&amp;&amp; !place_meeting2(object_index,x,y+9)
&amp;&amp; !place_meeting2(object_index,x,y-9){image_index=3 exit}


if !place_meeting2(object_index,x+9,y)
&amp;&amp; place_meeting2(object_index,x-16,y)
&amp;&amp; !place_meeting2(object_index,x,y+9) 
&amp;&amp; !place_meeting2(object_index,x,y-9){image_index=2 exit}




if !place_meeting2(object_index,x+9,y)
&amp;&amp; !place_meeting2(object_index,x-9,y)
&amp;&amp; place_meeting2(object_index,x,y+9)
&amp;&amp; !place_meeting2(object_index,x,y-9){image_index=1 exit}//234234234234


//lkjlkjkl
if place_meeting2(object_index,x+9,y)
&amp;&amp; place_meeting2(object_index,x-9,y)
&amp;&amp; !place_meeting2(object_index,x,y+9)
&amp;&amp; !place_meeting2(object_index,x,y-9){image_index=9 exit}


if !place_meeting2(object_index,x+9,y)
&amp;&amp; !place_meeting2(object_index,x-9,y)
&amp;&amp; !place_meeting2(object_index,x,y+9)
&amp;&amp; place_meeting2(object_index,x,y-9){image_index=0 exit}




if place_meeting2(object_index,x+9,y)
&amp;&amp; !place_meeting2(object_index,x-9,y)
&amp;&amp; place_meeting2(object_index,x,y+9)
&amp;&amp; !place_meeting2(object_index,x,y-9){image_index=10 exit}

if place_meeting2(object_index,x+9,y)
&amp;&amp; !place_meeting2(object_index,x-9,y)
&amp;&amp; !place_meeting2(object_index,x,y+9)
&amp;&amp; place_meeting2(object_index,x,y-9){image_index=6 exit}


if !place_meeting2(object_index,x+9,y)
&amp;&amp; place_meeting2(object_index,x-9,y)
&amp;&amp; place_meeting2(object_index,x,y+9)
&amp;&amp; !place_meeting2(object_index,x,y-9){image_index=11 exit}

if !place_meeting2(object_index,x+9,y)
&amp;&amp; place_meeting2(object_index,x-9,y)
&amp;&amp; !place_meeting2(object_index,x,y+9)
&amp;&amp; place_meeting2(object_index,x,y-9){image_index=5 exit}

if !place_meeting2(object_index,x+9,y)
&amp;&amp; !place_meeting2(object_index,x-9,y)
&amp;&amp; place_meeting2(object_index,x,y+9)
&amp;&amp; place_meeting2(object_index,x,y-9){image_index=12 exit}

if !place_meeting2(object_index,x+9,y)
&amp;&amp; !place_meeting2(object_index,x-9,y)
&amp;&amp; !place_meeting2(object_index,x,y+9)
&amp;&amp; !place_meeting2(object_index,x,y-9){image_index=13 exit}

if place_meeting2(object_index,x+9,y)
&amp;&amp; place_meeting2(object_index,x-9,y)
&amp;&amp; place_meeting2(object_index,x,y+9)
&amp;&amp; place_meeting2(object_index,x,y-9){image_index=8 exit}




if !place_meeting2(object_index,x+9,y)
&amp;&amp; place_meeting2(object_index,x-9,y)
&amp;&amp; place_meeting2(object_index,x,y+9)
&amp;&amp; place_meeting2(object_index,x,y-9){image_index=14 exit}

if place_meeting2(object_index,x+9,y)
&amp;&amp; !place_meeting2(object_index,x-9,y)
&amp;&amp; place_meeting2(object_index,x,y+9)
&amp;&amp; place_meeting2(object_index,x,y-9){image_index=15 exit}

if place_meeting2(object_index,x+9,y)
&amp;&amp; place_meeting2(object_index,x-9,y)
&amp;&amp; !place_meeting2(object_index,x,y+9)
&amp;&amp; place_meeting2(object_index,x,y-9){image_index=7 exit}

if place_meeting2(object_index,x+9,y)
&amp;&amp; place_meeting2(object_index,x-9,y)
&amp;&amp; place_meeting2(object_index,x,y+9)
&amp;&amp; !place_meeting2(object_index,x,y-9){image_index=16 exit}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.ONLINE=true{
    if phelth!=helth &amp;&amp; phelth!=0 &amp;&amp; helth&gt;0 &amp;&amp; !instance_exists(obj_client)
    &amp;&amp; starthelth!=999999999 &amp;&amp; global.ONLINE=true{
        clearbuffer()
        writebyte(21)
        writebyte(1)
        writeshort(x+8)
        writeshort(y+8)
        writefloat(helth)
        sendmessage(global.clienttcp)
    }
}

if phelth!=helth{
    phelth=helth
    
    switch(crack){
        case 0:
        if helth&lt;starthelth &amp;&amp; helth&gt;=starthelth*(3/4){crack=1}
        break;
        
        case 1:
        if helth&lt;=starthelth*(3/4) &amp;&amp; helth&gt;=starthelth*(2/4){crack=2}
        break;
        
        case 2:
        if helth&lt;=starthelth*(3/4) &amp;&amp; helth&gt;=starthelth*(2/4){crack=3}
        break;
        
        
        /*case 3:
        if helth&lt;=starthelth*(2/4) &amp;&amp; helth&gt;=0{crack=3}
        break;*/
        
    }
}
if pcrack!=crack{
    pcrack=crack
    if surface_exists(obj_control.BlockSurface){
        surface_set_target(obj_control.BlockSurface)
        draw_sprite(spr_crack,crack,x,y)
        surface_reset_target()
    }
}

if helth&lt;0 &amp;&amp; !instance_exists(obj_client){
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if starthelth!=999999999{if crack=0{draw_enable_alphablend(false)}}
if starthelth=999999999{draw_enable_alphablend(false)}

draw_set_alpha(1)
draw_self()

if starthelth!=999999999{
    if crack!=0{
    draw_sprite(spr_crack,crack,x,y)
    }
    
    if helth&lt;0 &amp;&amp; !instance_exists(obj_client){
        nn=instance_create(x,y,obj_blockdead)
        nn.sprite_index=sprite_index
        nn.image_index=image_index
        
        
        if global.BLOOD=true &amp;&amp; BLOOD2=true{
            if surface_exists(global.surface_blood){
                if view_current == 0
                    {
                draw_enable_alphablend(1)
                surface_set_target(global.surface_blood);
                draw_set_alpha(1)
                draw_set_color(c_white)
                draw_surface(global.surface_blood,0,0);
                draw_set_blend_mode(bm_subtract)
                draw_sprite_ext(sprite_index,0,x-4,y-4,1.5,1.5,0,c_white,1);
                draw_set_blend_mode(bm_normal);
                surface_reset_target();
                }
            }
        }
        
        
        instance_destroy()
    }
}

draw_enable_alphablend(true);
*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
