<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_holder</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///OLD CODE
/*
offset_y=0
host=self.id;
next_rope=instance_create(x,y+offset_y,obj_gun7Rope)

poop=physics_joint_distance_create(host,next_rope,host.x,host.y,next_rope.x,next_rope.y,false)
physics_joint_set_value(poop,phy_joint_damping_ratio,1)
physics_joint_set_value(poop,phy_joint_frequency,10)

with(next_rope){
    parent=other.id
}

repeat(5){
    offset_y+=8
    last_rope=next_rope
    next_rope=instance_create(x,y+offset_y,obj_gun7Rope)
    
    link=physics_joint_distance_create(last_rope,next_rope,last_rope.x,last_rope.y,next_rope.x,next_rope.y,0)
    physics_joint_set_value(link,phy_joint_damping_ratio,1)
    physics_joint_set_value(link,phy_joint_frequency,10)
    
    
    with(next_rope){
        parent=other.last_rope
    }
}
*/

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xxstart=0
yystart=0

xx[0] = x 
yy[0] = y 


grav = 5 //gravity strenght
len = 10 //lenght of single segment on cloth
sg = 3 //numler of segments mentioned above

//creating variables of every segment's starting x and y position
i = 0 
repeat sg
{
i+=1
xx[i] = xx[0]
yy[i] = yy[0]

}


t=sprite_get_texture(spr_rope,0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xxstart=x
yystart=y

length = 0

dis = point_distance(xx[0],yy[0],xxstart,yystart)  /////    updating first segment
dir = point_direction(xx[0],yy[0],xxstart,yystart)    //  
                                                      // mouse_x and mouse_y are the starting points
if dis &gt; len then                                     // of the very top of the cloth we make
   {                                                  //
   xx[0]+= lengthdir_x(dis-len,dir)                   //
   yy[0]+= lengthdir_y(dis-len,dir)                   //
   }                                                  //
yy[0] += grav;                                     /////  yy += grav; is for adding gravity



i=0                                               //////
repeat sg                                             //  updating every other segmrn
{                                                     //  the sme way as the first one
i+=1                                                  //
                                                      //
dis = point_distance(xx[i],yy[i],xx[i-1],yy[i-1])     //
dir = point_direction(xx[i],yy[i],xx[i-1],yy[i-1])    //
                                                      //
if dis &gt; len then                                     //
   {                                                  //
   xx[i]+= lengthdir_x(dis-len,dir)                   //
   yy[i]+= lengthdir_y(dis-len,dir)                   //
   }                                                  //
                                                      //
yy[i] += grav;                                        //
                                            //////



if instance_exists(par_block){
c = instance_nearest(xx[i],yy[i],par_block) 
                                           
                                                  
                                                   
                                                       
if point_distance(c.x,c.y,xx[i],yy[i]) &lt; c.r
{
xx[i] = c.x+lengthdir_x(max(point_distance(c.x,c.y,xx[i],yy[i]),c.r),point_direction(c.x,c.y,xx[i],yy[i]))
yy[i] = c.y+lengthdir_y(max(point_distance(c.x,c.y,xx[i],yy[i]),c.r),point_direction(c.x,c.y,xx[i],yy[i]))
//if point_distance(c.x,c.y,xx[i],yy[i])&lt;c.r/1.1{ with(c){instance_destroy()}}
}
else
{   
//yy[i] += grav;
}

}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white); //Konstantine: ...or else we 'll get a black flag
; //Konstantine: this is our texture
draw_primitive_begin_texture(pr_trianglestrip,t);
draw_vertex_texture(xxstart,yystart,0,0);                                                                                                                                                //////
draw_vertex_texture(xxstart+5,yystart,1,0); //Konstantine: flag dimensions: 32x256                                                                                                                                               //////
i=0                                      //
repeat sg                                //   drawing the other segments
{                                        
i+=1                                     
draw_vertex_texture(xx[i],yy[i],0,i/sg);                                                                                                                                                //////
draw_vertex_texture(xx[i]+5,yy[i],1,i/sg);
}                                        //
                                     //////
draw_primitive_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
