<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_1run</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gravity=1
jump=1
hspeed2=0

image_speed=0

maxhelth=100
helth=maxhelth
phelth=maxhelth

movespeed=1.5
jumpheight=7

spr_idle=spr_player_1idle
spr_run=spr_player_1run
spr_heal=spr_player_1heal
spr_jump=-1
alarm[0]=1

canmove=true

alarm[1]=3
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///shield
xx=0
yy=0
obj=-1;
grid=eg_create(8,8,64,64);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gamePad=false
if gamepad_get_device_count()&gt;0{
    gamePad=true
}

phspeed2=0
pvspeed=0


pleft=0
pright=0
pup=0
left=0
right=0
up=0

cancollide=false

ice=false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
alarm[1]=7
if abs(hspeed2)&gt;1 &amp;&amp; place_meeting(x,y+1,par_block){
    global.PartsColor0=16645629
    global.PartsColor1=76393
    global.PartsColor2=8524
    global.PartsCollide=true
    var _yy_y;
    _yy_y=obj_player.y+sprite_get_height(sprite_index)-sprite_get_yoffset(sprite_index)
    part_burst(obj_player.x-6,obj_player.x+6,_yy_y-1,_yy_y-1,
    1,0,.2,c_white,60,120,1,0,-1,.1,360,-6)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.char=0{global.char=1}
scr_changePlayerSprite(global.char)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !place_free(x,y+1){
    if obj_control.gun=0{
        if hspeed&gt;0.1
        or hspeed&lt;-0.1{
            if obj_control.gun0charge&lt;obj_control.gun0chargeMax{
                obj_control.gun0charge+=0.5
            }
        }
    }
}

if !instance_exists(obj_tuthelp){instance_create(0,0,obj_tuthelp)}

if !place_free(x,y+1) &amp;&amp; cancollide=true{gravity=0}else{gravity=.5}
if canmove=true{
    if gamePad=false{
        hspeed2=(keyboard_check(obj_tuthelp.key[1])-keyboard_check(obj_tuthelp.key[2]))*-(movespeed+(obj_control.MoveSpeed/5))
        if hspeed2=0{
            var h=gamepad_axis_value(0, gp_axislh)
            h=(round(h*3)/3)
            if h&gt;0.3{h=1}
            if h&lt;-0.3{h=-1}
            if h=0{
                h=gamepad_button_check(0,gp_padr)-gamepad_button_check(0,gp_padl)
            }
            //hspeed2=h*(movespeed+(obj_control.MoveSpeed/5))
            if ice=false{
                hspeed2=h*(movespeed+(obj_control.MoveSpeed/5))
            }else{
                hspeed2=h*(movespeed+(obj_control.MoveSpeed/75))
            }
        }
    }else{
        hspeed2=(keyboard_check(obj_tuthelp.key[1])-keyboard_check(obj_tuthelp.key[2]))*-(movespeed+(obj_control.MoveSpeed/5))
        var h=gamepad_axis_value(0, gp_axislh)
        h=(round(h*3)/3)
        if h&gt;0.3{h=1}
        if h&lt;-0.3{h=-1}
        if h=0{
            h=gamepad_button_check(0,gp_padr)-gamepad_button_check(0,gp_padl)
        }
        if h!=0{
            if ice=false{
                hspeed2=h*(movespeed+(obj_control.MoveSpeed/5))
            }else{
                hspeed2=h*(movespeed+(obj_control.MoveSpeed/75))
            }
        }
    }
    
    if obj_control.shovel=-1 || obj_control.shovel=3{
        if hspeed&gt;0{image_xscale=1}
        if hspeed&lt;0{image_xscale=-1}
    }
    if ice=false{
        hspeed+=(hspeed2-hspeed)/3
    }else{
        hspeed+=(hspeed2-hspeed)/25
    }
    if hspeed&gt;.5 or hspeed&lt;-.5{
        image_speed=hspeed/10
        sprite_index=spr_run
    }else{
        if !instance_exists(obj_client2){
        image_speed=.15
        sprite_index=spr_idle
        }else{
            if obj_client2.getHealed=false{
                image_speed=.15
                sprite_index=spr_idle
            }
        }
    }
    if spr_jump!=-1{
        if place_free(x,y+5){
            sprite_index=spr_jump
        }
    }
    
    //if hspeed&gt;-0.1 &amp;&amp; hspeed&lt;0.1{image_index=0}
    
    if !place_free(x+hspeed,y){hspeed=0 hspeed2=0}
    
    var canj=true;
    if instance_exists(obj_client2){
        if obj_client2.dead=true &amp;&amp;
        point_distance(x,y,obj_client2.x,obj_client2.y)&lt;50{
            canj=false
        }
    }
    if (keyboard_check_pressed(obj_tuthelp.key[0])
    //|| (keyboard_check_pressed(vk_space))
    || gamepad_button_check_pressed(0,gp_face1))
    &amp;&amp; canj=true
        {
        if !place_free(x,y+1) or jump&gt;0
            {
            //sound_play(snd_jump)
            audio_play_sound(snd_jump,10,0)
            //if jump&gt;obj_control.Jump &amp;&amp; place_free(x,y+1){jump--}
            //if !place_free(x,y+1){jump=false}
            if jump&gt;0 &amp;&amp; place_free(x,y+1){jump--}else{jump=obj_control.Jump}
            vspeed=-(jumpheight+(obj_control.JumpHeight/5))
            }
        }

}

if !place_meeting(x,y,par_gun){
    obj_control.gunpickup=0
}

if instance_exists(obj_parts) &amp;&amp; abs(hspeed)&gt;.3{
    with(obj_parts){
        if depth=-6{
            if point_distance(x,y,other.x,other.y)&lt;15
            &amp;&amp; point_distance(x,y,other.x,other.y)&gt;2{
                hs = ((obj_player.x-x)/3)/obj_player.hspeed;
                if abs(obj_player.vspeed)&gt;0{
                    vs = ((obj_player.y-y)*2)/obj_player.vspeed;
                }else{vs=0}
                if hs!=0 &amp;&amp; abs(hs)&gt;2{hspeed=1/(hs*(other.hspeed/abs(other.hspeed)))}
                if vs!=0 &amp;&amp; abs(vs)&gt;3{vspeed=1/vs}
            }
        }
    }
}


if global.death_start=true
&amp;&amp; global.keyGot=true{
    if !place_free(x,y+1){
        if place_meeting(x,y+1,obj_block3){
            global.keyGot=false
            with(obj_block3){
                instance_destroy()
            }
        }
    }
}


if cancollide=false{
    if obj_player.y&gt;(room_height/2)-32{
        cancollide=true
        with(par_block){solid=true}
    }else{
        with(par_block){
            if point_distance(x,y,obj_player.x,obj_player.y)&lt;32{solid=false}
        }
        
        with(obj_chest){gravity=0 x=xstart y=ystart}
        with(obj_crate){gravity=0 x=xstart y=ystart}
        with(obj_dynamite){gravity=0 x=xstart y=ystart}
        with(obj_gem){gravity=0 x=xstart y=ystart}
        with(par_gun){gravity=0 x=xstart y=ystart}
        with(par_powerup){gravity=0 x=xstart y=ystart}
        with(par_monster){gravity=0 x=xprevious y=ystart}
        
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///online
if global.ONLINE=true{
    if global.GamePadMouse=0 || os_type=os_android{
        left=keyboard_check(obj_tuthelp.key[1])
        right=keyboard_check(obj_tuthelp.key[2])
        up=keyboard_check_pressed(obj_tuthelp.key[0])
        if up=0{
            //up=keyboard_check_pressed(vk_space)
        }
        if instance_exists(obj_client2){
            if obj_client2.dead=true &amp;&amp;
            point_distance(x,y,obj_client2.x,obj_client2.y)&lt;50{
                up=0
            }
        }
    }else{
        var h=gamepad_axis_value(0, gp_axislh)
        h=(round(h*3)/3)
        if h&gt;0.3{right=1}else{right=0}
        if h&lt;-0.3{left=1}else{left=0}
        if h=0{
            right=gamepad_button_check(0,gp_padr)
            left=gamepad_button_check(0,gp_padl)
        }
        up=gamepad_button_check_pressed(0,gp_face1)
        if instance_exists(obj_client2){
            if obj_client2.dead=true &amp;&amp;
            point_distance(x,y,obj_client2.x,obj_client2.y)&lt;50{
                up=0
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///damage
if phelth&gt;obj_control.player_health+2{
    nn=instance_create(x,y,obj_hitnumber)
    nn.number=round(phelth-obj_control.player_health)
    nn._color=c_red
    phelth=obj_control.player_health
    audio_play_sound(choose(snd_hurt0,snd_hurt1,snd_hurt2,snd_hurt3),2,0)
}

if phelth&lt;obj_control.player_health{
    nn=instance_create(x,y,obj_hitnumber)
    nn.number=abs(round(obj_control.player_health-phelth))
    nn._color=c_green
    scr_unlockPlayerDown(9,abs(round(phelth-obj_control.player_health)))
    phelth=obj_control.player_health
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_monster3_bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if obj_control.player_shield&lt;=0{
obj_control.player_health-=other.damage
}else{obj_control.player_shield-=.5 obj_control.alarm[5]=room_speed}

/*
//if !sound_isplaying(snd_hurt){sound_play(snd_hurt)}
if !audio_is_playing(snd_hurt){
    audio_play_sound(snd_hurt,10,0)
}*/

with(other){instance_destroy()}

eg_explode(grid,other.x-x+32,other.y-y+32,32,40)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_monster">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if obj_control.PlayerRageMode=true{
    other.helth=-1
    exit
}


if obj_control.player_shield&lt;=0{
obj_control.player_health-=other.damage
}else{obj_control.player_shield-=.1 obj_control.alarm[5]=room_speed}

/*
if other.damage&gt;0{
    //if !sound_isplaying(snd_hurt){sound_play(snd_hurt)}
    if !audio_is_playing(snd_hurt){
        audio_play_sound(snd_hurt,10,0)
    }
}*/
if obj_control.player_MonsterFire&gt;0{
    other.fire=obj_control.player_MonsterFire
}
if obj_control.player_Freeze&gt;1{
    other.freeze=obj_control.player_Freeze
    other.alarm[11]=room_speed*2
    if other.image_blend=c_white{
        other.image_blend=c_aqua
    }
    
    if object_get_name(other.object_index)="obj_monster2_1"{
        other.master.freeze=obj_control.player_Freeze
        other.master.alarm[11]=room_speed*2
        other.master.image_blend=c_aqua
    }
    
}

eg_explode(grid,other.x-x+32,other.y-y+32,32,40)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_block">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if cancollide=true{

if vspeed&gt;0{
    if obj_tuthelp.GraphicsParticles=2{
    global.PartsColor0=16645629
    global.PartsColor1=76393
    global.PartsColor2=8524
    global.PartsCollide=true
    var _yy_y;
    _yy_y=obj_player.y+sprite_get_height(sprite_index)-sprite_get_yoffset(sprite_index)
    part_burst(obj_player.x-6,obj_player.x+6,_yy_y-4,_yy_y-1,
    abs(vspeed),0,.2,c_white,60,120,1,0,-1,.1,360,-6)
    }
    //sound_play(snd_groundhit)
    audio_play_sound(snd_groundhit,1,0)
}


if vspeed &gt; 0 &amp;&amp; !place_free(x,y+vspeed)
{move_contact(270) jump=1}
vspeed = 0
if place_meeting(x,y+1,obj_block5){ice=true}else{ice=false}

if instance_exists(obj_block3){
    if other.object_index=obj_block3.object_index{
        
        if global.keyGot=true{
            global.keyGot=false
            with(obj_block3){
                instance_destroy()
            }
        }

    }
}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_health">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_control.player_health+=other.value
obj_control.Score+=10
if !audio_is_playing(snd_coin1)
&amp;&amp; !audio_is_playing(snd_coin2){
audio_play_sound(choose(snd_coin1,snd_coin2),10,0)}

with(other){instance_destroy()}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_key">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.keyGot=true
obj_control.Score+=25

//if !sound_isplaying(snd_coin1){sound_play(snd_coin1)}
if !audio_is_playing(snd_coin1){
    audio_play_sound(snd_coin1,10,0)
}
with(other){instance_destroy()}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.ONLINE=true{
    clearbuffer()
    writebyte(6)
    writebyte(global.keyGot)
    sendmessage(global.clienttcp)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_gem">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_control.money+=(other.value)*obj_control.moneyCheckMult
obj_control.Score+=other.value*obj_control.moneyCheckMult
global.MoneyEarned=true
if !sound_isplaying(snd_coin){
sound_play(snd_coin)}
if !audio_is_playing(snd_coin){
    audio_play_sound(snd_coin,5,0)
}

scr_unlockPlayerDown(8,round(other.value))//Unlock

with(other){instance_destroy()}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_powerup">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>


switch(other._id){

    ////////////BRONZE//////////////
    case 0:
        obj_control.player_health+=10
        obj_control.player_maxhealth+=10
    break;
    case 1:
        if obj_control.Crits&lt;0.5{
            obj_control.Crits+=0.1
        }else{
            obj_control.Crits+=0.05
        }
    break;
    case 2:
        obj_control.player_magnet+=10
    break;
    case 3:
        if obj_control.player_chestOpen&lt;10{
            obj_control.player_chestOpen+=2.5
        }else{
            obj_control.player_chestOpen+=1
        }
    break;
    case 4:
        if obj_control.player_moss&lt;5{
            obj_control.player_moss+=0.5
        }else{
            obj_control.player_moss+=0.2
        }
    break;  


    
    
    
    ////////////SILVER//////////////
    case 20:
        obj_control.Jump++
    break;
    case 21:
        if obj_control.player_MonsterKill&lt;10{
            obj_control.player_MonsterKill+=2
        }else{
            obj_control.player_MonsterKill+=0.5
        }
    break;
    case 22:
        obj_control.player_GemDamageMult+=0.1
    break;
    case 23:
        obj_control.player_DigPower+=1
    break;
    case 24:
        if obj_control.player_DigSpeed&gt;15{
            obj_control.player_DigSpeed-=2
        }else{
            obj_control.player_DigSpeed-=.25
        }
    break;
    case 25:
        if obj_control.player_MonsterMeeleHeal&lt;15{
            obj_control.player_MonsterMeeleHeal+=1
        }else{
            obj_control.player_MonsterMeeleHeal+=.25
        }
    break;
    
    
    
    ///////////GOLD/////////////////
    case 40:
        obj_control.BulletCount++
    break;
    case 41:
        if obj_control.Fire=false{
            obj_control.Fire=true
            obj_control.player_MonsterFire++
        }else{
            obj_control.player_MonsterFire++
        }
    break;
    case 42:
        obj_control.player_MonsterExplode++
    break;
    case 43:
        obj_control.player_MonsterPosoin+=1
    break;
    case 44:
        obj_control.player_Freeze++
    break;
    case 45:
        if obj_control.player_IceSlide=true{
            obj_control.player_IceSlide=false
        }else{
            instance_create(x,y,choose(obj_PowerUpGold0,obj_PowerUpGold1,obj_PowerUpGold2,obj_PowerUpGold3,obj_PowerUpGold4,obj_PowerUpGold5))
            with(other){instance_destroy()}
            exit;
        }
    break;

    /*
    case 0:
        obj_control.BulletCount++
    break;
    case 1:
        //obj_control.JumpHeight++
        obj_control.Jump++
    break;
    
    case 2:
        obj_control.Regen++
    break;
    case 3:
        obj_control.Fire=true
    break;
    
    case 5:
        obj_control.Jump++
    break;
    
    */
    
}
for(i=0;i&lt;10;i++){
    if obj_control.powerupLife[i]=0{
        obj_control.poweruptxt[i]=other.poweruptxt
        obj_control.poweruptxt2[i]=other.poweruptxt2
        obj_control.powerupspr[i]=other.sprite_index
        obj_control.powerupLife[i]=300
        break;
    }
}

//obj_control.alarm[9]=room_speed*5

for(i=0;i&lt;1000;i++){
    if obj_control.PowerCount[i]=-1{
        obj_control.PowerCount[i]+=other._id
        obj_control.PowerCountS[i]=other.sprite_index
        break;
    }
}

//if !sound_isplaying(snd_powerup){sound_play(snd_powerup)}
if !audio_is_playing(snd_powerup){audio_play_sound(snd_powerup,10,0)}
with(other){instance_destroy()}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_gun">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if obj_control.gun=-1{
    //sound_play(snd_powerup)
    audio_play_sound(snd_powerup,10,0)
    obj_control.gun=other.type
    obj_control.alarm[2]=room_speed*4
    if global.ONLINE=false{scr_tutorailscreen(other.type)}
    with(other){instance_destroy()}
    obj_control.Score+=50
}else{
    if keyboard_check_pressed(obj_tuthelp.key[3]) or gamepad_button_check_pressed(0,gp_face3){
        //sound_play(snd_powerup)
        audio_play_sound(snd_powerup,10,0)
        instance_create(x,y-15,obj_control.gun2[obj_control.gun])
        obj_control.gun=other.type
        if global.ONLINE=false{scr_tutorailscreen(other.type)}
        obj_control.alarm[2]=room_speed*4
        with(other){instance_destroy()}
        
        
    }
    
    obj_control.gunpickup=1
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>


/*
if obj_control.PlayerRageMode=true{
    var yy=0
    var xx=-1
    switch(round(image_index)){
        case 0: yy=0 break;
        case 1: yy=-1 break;
        case 2: yy=-1 break;
        case 3: yy=0 break;
        case 4: yy=0 break;
    }
    //3,-5
    draw_set_color(c_red)
    draw_set_alpha(1)
    draw_line(xx+x+4*image_xscale,y-5+yy,xx+x+5*image_xscale,y-5+yy)
    draw_line(xx+x+4*image_xscale,y-4+yy,xx+x+5*image_xscale,y-3+yy)
    draw_line(xx+x+4*image_xscale,y-6+yy,xx+x+5*image_xscale,y-7+yy)
    
    if obj_control.alarm[8]=-1{
        with(instance_create(x,y,objLaser_messenger)){
            move_contact_solid(point_direction(x,y,mouse_x,mouse_y),800)
            other.laser_x=x; 
            other.laser_y=y; 
            instance_destroy(); 
        }
        var dir=point_direction(obj_player.x,obj_player.y,laser_x,laser_y);
        if dir&lt;90
        || dir&gt;270{
            image_xscale=1
        }else{
            image_xscale=-1
        }
        scr_shake2()
        draw_line_width(obj_player.x+(6*image_xscale)-1,obj_player.y-5,laser_x,laser_y,2)
        //draw_set_color(c_black)
        //draw_line(obj_player.x+(6*image_xscale)-1,obj_player.y-5,obj_player.x+dcos(dir*-1)*1000,obj_player.y+dsin(dir*-1)*1000)
        nn=instance_nearest(laser_x,laser_y,par_block)
        if nn.object_index!=obj_block2
        &amp;&amp; nn.object_index!=obj_block3
        &amp;&amp; nn.object_index!=object_index{
            nn.helth--
        }
        
        
        var obj=collision_line(obj_player.x+(6*image_xscale)-1,obj_player.y-5,obj_player.x+dcos(dir*-1)*1000,obj_player.y+dsin(dir*-1)*1000,par_block,0,1);
        if obj&gt;=0{
            with(obj){
                if id!=other.id{
                    helth--
                }
            }
        }
        
        
    }
    
    
    
}
*/
draw_self()
//draw the santa hat
if CHRISTMAS=true{
    var yy=sprite_get_yoffset(sprite_index)-3
    var xx=(2*-1)*(image_xscale)
    //if image_xscale=-1{xx=0}
    if sprite_index=spr_idle{
    switch(round(image_index)){
        case 0: yy+=0 break;
        case 1: yy+=1 break;
        case 2: yy+=1 break;
        case 3: yy+=0 break;
        case 4: yy+=0 break;
    }
    }
    draw_sprite_ext(spr_santahat2,0,x+xx,y-yy,image_xscale,1,0,c_white,1)
}
if PARTY=1{
    var yy=sprite_get_yoffset(sprite_index)-3
    var xx=(-1)*(image_xscale)
    //if image_xscale=-1{xx=0}
    if sprite_index=spr_idle{
    switch(round(image_index)){
        case 0: yy+=0 break;
        case 1: yy+=1 break;
        case 2: yy+=1 break;
        case 3: yy+=0 break;
        case 4: yy+=0 break;
    }
    }
    draw_sprite_ext(spr_santahat,0,x+xx,y-yy,image_xscale/2.5,1/2.5,0,global.PartyHatColour,1)
}









</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///shield
if global.char=7
&amp;&amp; obj_control.player_shield&gt;0{
    eg_update_quick(grid,1.1)
    
    draw_set_color(c_white)
    eg_draw_tex(grid,x-32,y-32,sprite_get_texture(spr_shield,0));
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>5,9</point>
    <point>9,9</point>
  </PhysicsShapePoints>
</object>
