<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_highscoresign</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//image_xscale=4
//image_yscale=4

gravity=0.25
image_speed=0

get=http_post_string(IP+"highscore.php?",encrypt2("act")+"=+"+encrypt2("GetHigh2"))

Name="Null"
Score=-1
Floor=-1
Money=-1
Monster=-1
Chest=-1

for(i=0;i&lt;20;i++){
    _name[i]=""
    _char[i]=0
    _score[i]=-1
    _floor[i]=-1
    _money[i]=-1
    _monster[i]=-1
    _chest[i]=-1
}
player=-1


if !file_exists("Settings.txt"){
    global.PlayerName=get_string("What is your name?#(Only used for online high scores)","")
    
    while(name_get_chars(global.PlayerName)=true){
        global.PlayerName=get_string("Invalid name.#Please don't use symbols","")
    }
    while(global.PlayerName=""){
        global.PlayerName=get_string("Invalid name.#Please actually enter something","")
    }
    
    file=file_text_open_write("Settings.txt")
    file_text_write_string(file,global.PlayerName)
    file_text_close(file)
}else{
    file=file_text_open_read("Settings.txt")
    global.PlayerName=file_text_read_string(file)
    var changed=false;
    while(global.PlayerName=""){
        global.PlayerName=get_string("Invalid name.#Please actually enter something","")
        changed=true
    }
    file_text_close(file)
    if changed=true{
        file=file_text_open_write("Settings.txt")
        file_text_write_string(file,global.PlayerName)
        file_text_close(file)
    }
    
}

click=0
alarm[0]=room_speed/2
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///setup stuff
for(i=0;i&lt;9;i+=1){
    yy[i]=room_height+50
    yygoal[i]=0
    yytimer[i]=(i*5)+15
}
yytimer[0]=0
draw=false

jump=false

//random characters---no bias
pen[0]=spr_linus_select
pen[1]=spr_luke_select
pen[2]=spr_logan_select
pen[3]=spr_wendell_select
pen[4]=spr_pistol_select

for(i=0;i&lt;5;i++){
    var a=irandom(4)
    while(pen[a]=spr_parts){
        a=irandom(4)
    }
    char[i]=pen[a]
    pen[a]=spr_parts
    if i=2{
        if pen[0]!=spr_parts{pen[0]=spr_player_1idle}
        if pen[1]!=spr_parts{pen[1]=spr_player_2idle}
        if pen[2]!=spr_parts{pen[2]=spr_player_3idle}
        if pen[3]!=spr_parts{pen[3]=spr_player_4idle}
        if pen[4]!=spr_parts{pen[4]=spr_player_5idle}
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw=false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0]=room_speed/2
click=0
doubleclick=0

jump=!jump
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !place_free(x,y+1){gravity=0}else{gravity=.5}
if !instance_exists(obj_control){gravity=0 hspeed=0 vspeed=0 x=xprevious y=yprevious}

if mouse_x&gt;x
&amp;&amp; mouse_y&gt;y
&amp;&amp; mouse_x&lt;x+sprite_get_width(sprite_index)
&amp;&amp; mouse_y&lt;y+sprite_get_height(sprite_index)
&amp;&amp; draw=false{
    if mouse_check_button_pressed(mb_left) &amp;&amp; obj_pause.pause=false{
        click++
    }
}
if click&gt;=2 &amp;&amp; draw=false{
    draw=true
    alarm[1]=1
    click=0
    keyboard_string=""
    scr_tutorailscreen(999)
}

if gamepad_button_check_released(0,gp_select) &amp;&amp; obj_tuthelp.tut!=999{
    draw=true
    alarm[1]=1
    obj_tuthelp.alarm[7]=5
    click=0
    keyboard_string=""
    scr_tutorailscreen(999)
}

if global.GamePadMouse=1{image_index=1}else{image_index=0}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_block">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if vspeed &gt; 0 &amp;&amp; !place_free(x,y+vspeed)
{move_contact(270) jump=1}
vspeed = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//HTTP EVENT
if ds_map_find_value(async_load, "id") == get
    {
    if ds_map_find_value(async_load, "status") &gt;= 0{
       r_str = ds_map_find_value(async_load, "result");
       //9
       var loops,loops2;
       loops=0
       loops2=0
       for(__ai=0;__ai&lt;10;__ai++){
            //copy the first 9 lines of the thing to parse
            r_str2=string_copy(r_str,0,string_pos(")",r_str))
            r_str=string_delete(r_str,1,string_pos(")",r_str))
            //show_message(r_str)
            //delete all things
            r_str2=string_replace_all(r_str2,"&lt;pre&gt;","")
            r_str2=string_replace_all(r_str2,"&lt;/pre&gt;","")
            r_str2=string_replace_all(r_str2,"Array","")
            r_str2=string_replace_all(r_str2,"(","")
            r_str2=string_replace_all(r_str2,")","")
            r_str2=string_replace_all(r_str2," ","")
            r_str2=string_replace_all(r_str2,"=&gt;","")
            r_str2=string_replace_all(r_str2,"=&gt;","")
            
            while(string_char_at(r_str2,1)!="["){
                loops++
                r_str2=string_delete(r_str2,1,1)
                if loops&gt;100{break}
            }
            loops=0
            r_str2=string_replace_all(r_str2,"[Name]","|")
            r_str2=string_replace_all(r_str2,"[Char]","|")
            r_str2=string_replace_all(r_str2,"[Score]","|")
            r_str2=string_replace_all(r_str2,"[Floor]","|")
            r_str2=string_replace_all(r_str2,"[Money]","|")
            r_str2=string_replace_all(r_str2,"[Monster]","|")
            r_str2=string_replace_all(r_str2,"[Chest]","|")
            r_str2=string_delete(r_str2,1,1)
            r_str2+="|"
            //show_message(r_str2)
            for(_a__=0;_a__&lt;7;_a__++){
                var _str=string_copy(r_str2,0,string_pos("|",r_str2)-1)
                r_str2=string_delete(r_str2,1,string_pos("|",r_str2))
                switch(_a__){
                    case 0: _name[__ai]=_str break;
                    case 1: _char[__ai]=_str break;
                    case 2: _score[__ai]=_str break;
                    case 3: _floor[__ai]=_str break;
                    case 4: _money[__ai]=_str break;
                    case 5: _monster[__ai]=_str break;
                    case 6: _chest[__ai]=_str break;
                }
            }
            
       }
       
       
       }
else
   {
   r_str = "null";
   }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//random characters---no bias
pen[0]=spr_linus_select
pen[1]=spr_luke_select
pen[2]=spr_logan_select
pen[3]=spr_wendell_select
pen[4]=spr_pistol_select

for(i=0;i&lt;5;i++){
    var a=irandom(4);
    while(pen[a]=spr_parts){
        a=irandom(4)
    }
    char[i]=pen[a]
    pen[a]=spr_parts
    if i=2{
        if pen[0]!=spr_parts{pen[0]=spr_player_1idle}
        if pen[1]!=spr_parts{pen[1]=spr_player_2idle}
        if pen[2]!=spr_parts{pen[2]=spr_player_3idle}
        if pen[3]!=spr_parts{pen[3]=spr_player_4idle}
        if pen[4]!=spr_parts{pen[4]=spr_player_5idle}
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
