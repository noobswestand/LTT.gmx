<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_1idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>char=0
canmove=true
hspeed2=0

spr_run=spr_linus_select
spr_idle=spr_linus_select

keyGot=false

pshovelanimateRot=0
shovelanimateRot=0


gunshovel=0
shovelanimate=0

PlayerMouseRot=0
pPlayerMouseRot=0
rightmouse=0

shovel=-1
pshovel=-1
gun=-1


mouseleft_pressed=false
mouseleft=false
mouseleft_released=false
pmouseleft=false


img=spr_shovel0animte;
rot=0;
_scale=1
p_hspeed2=0

heat=0
canshoot=true

global.mouse_endx2=0
global.mouse_endy2=0

plasmaGunCharge=0
MaxplasmaGunCharge=175
tempplasma=0

gun8Speed=0

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///update vars

gun0charge=0
BulletShoot=0
BulletCount=1

tntGunAmount=0
heat=0
Maxheat=60*3

_left=0
_right=0
_up=0

gun0chargeMax=100
chargeJump=0

jumps=5
for(i=0;i&lt;25;i++){_jump[i]=-1}


dead=false
getHealed=false
deadCharge=0
deadChargeMax=120

ice=false

ShowShield=true

money=0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///powerup vars
ShootSpeed=0
MoveSpeed=0
JumpHeight=0
jump=1
Jump=2


movespeed=1.5
jumpheight=7

Crits=0
PlayerLightDamage=false
player_magnet=16
player_moss=0
player_chestOpen=0
player_MonsterKill=0
player_GemDamageMult=0
player_DigPower=10
player_DigSpeed=45
player_MonsterMeeleHeal=0
player_MonsterExplode=0
player_MonsterFire=0
player_MonsterPosoin=0
player_IceSlide=true
player_Freeze=0

damagemult=0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///shield
xx=0
yy=0
obj=-1;
grid=eg_create(8,8,64,64);



partyHatColour=choose(c_white,c_black,c_green,c_lime,c_yellow,c_orange,c_aqua,c_blue,c_purple,c_olive,c_red,c_maroon)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ShowShield=true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///overheat

heat--
if heat&lt;=0{
    alarm[6]=-1
    alarm[4]=1
    heat=0
}else{
    alarm[6]=1
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canshoot=true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///send terrain
if instance_exists(obj_server){
    clearbuffer()
    writebyte(12)
    writeshort(instance_number(par_block))
    with(par_block){
        writeshort(x)
        writeshort(y)
        writebyte(pid)
    }
    writeshort(instance_number(obj_chest))
    with(obj_chest){
        writeushort(x)
        writeushort(y)
        if sprite_index=spr_chest0{writebyte(0)}
        if sprite_index=spr_chest1{writebyte(1)}
        if sprite_index=spr_chest2{writebyte(2)}
    }
    writeshort(instance_number(obj_crate))
    with(obj_crate){
        writeushort(x)
        writeushort(y)
        if sprite_index=spr_crate0{writebyte(0)}
        if sprite_index=spr_crate1{writebyte(1)}
        if sprite_index=spr_crate2{writebyte(2)}
        writeushort(value)
    }
    writeshort(instance_number(obj_dynamite))
    with(obj_dynamite){
        writeushort(x)
        writeushort(y)
    }
    writeshort(instance_number(par_sentry))
    with(par_sentry){
        writeushort(x)
        writeushort(y)
        writebyte(image_index+5)
        writeshort(image_angle)
        writebyte(monsterid)
    }
    writeshort(instance_number(obj_spikes))
    with(obj_spikes){
        writeushort(x)
        writeushort(y)
    }
    
    writeshort(global.gunheight)
    
    sendmessage(global.clienttcp)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hspeed2=p_hspeed2

if !place_free(x+hspeed,y){hspeed=0 hspeed2=0}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shovelanimate=false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if char=0{char=1}
scr_changePlayerSprite(char)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///nothing
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///controls
mouseleft_released=false
mouseleft_pressed=false


if mouseleft=false &amp;&amp; pmouseleft=true{
    mouseleft_released=true
}
if mouseleft=true &amp;&amp; pmouseleft=false{
    mouseleft_pressed=true
}

if pmouseleft!=mouseleft{
    pmouseleft=mouseleft
}

pmouseleft=mouseleft

//_up=false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///movement
if !place_free(x,y+1){gravity=0}else{gravity=.5}
if canmove=true{

    if ice=false{
        hspeed2=(_left-_right)*-(movespeed+(MoveSpeed/5))
    }else{
        hspeed2=(_left-_right)*-(movespeed+(MoveSpeed/75))
    }
    
    if shovel=-1{
        if hspeed&gt;0{image_xscale=1}
        if hspeed&lt;0{image_xscale=-1}
    }
    if ice=false{
        hspeed+=(hspeed2-hspeed)/3
    }else{
        hspeed+=(hspeed2-hspeed)/25
    }
    if hspeed&gt;.5 or hspeed&lt;-.5{
        image_speed=hspeed/10
        sprite_index=spr_run
    }else{
        if getHealed=false{
        image_speed=.15
        sprite_index=spr_idle
        }
    }
    
    if !place_free(x+hspeed,y){hspeed=0 hspeed2=0}
    
    
    if _up=true{
        if !place_free(x,y+1) or jump&gt;0{
            if jump&gt;0 &amp;&amp; place_free(x,y+1){jump--}else{jump=Jump}
            vspeed=-(jumpheight+(JumpHeight/5))
        }
    _up=false
    }
    
    
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///findpoint
var dir=PlayerMouseRot;
nn=instance_create(x+lengthdir_x(10,dir),y+lengthdir_y(10,dir),obj_findpoint2)
nn.direction=dir
nn.speed=16
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///charge
if !place_free(x,y+1){
    if gun=0{
        if hspeed&gt;0.1
        or hspeed&lt;-0.1{
            if gun0charge&lt;gun0chargeMax{
                gun0charge+=0.5
            }
        }
    }
}


if alarm[6]=-1{
    if (mouseleft=false){
        if heat&gt;0{
            heat--
        }else{heat=0}
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///control
if player_IceSlide=false{
    ice=false
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_monster3_bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>eg_explode(grid,other.x-x+32,other.y-y+32,32,40)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_monster">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if char=4 &amp;&amp; ShowShield=true{
    eg_explode(grid,other.x-x+32,other.y-y+32,32,40)
}
if player_MonsterFire&gt;0{
    other.fire=player_MonsterFire
}
if player_Freeze&gt;1{
    other.freeze=player_Freeze
    other.alarm[11]=room_speed*2
    if other.image_blend=c_white{
        other.image_blend=c_aqua
    }
    
    if object_get_name(other.object_index)="obj_monster2_1"{
        other.master.freeze=player_Freeze
        other.master.alarm[11]=room_speed*2
        other.master.image_blend=c_aqua
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_block">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if vspeed&gt;0{
    global.PartsColor0=16645629
    global.PartsColor1=76393
    global.PartsColor2=8524
    global.PartsCollide=true
    var _yy_y;
    _yy_y=y+sprite_get_height(sprite_index)-sprite_get_yoffset(sprite_index)
    part_burst(x-6,x+6,_yy_y-4,_yy_y-1,
    abs(vspeed),0,.2,c_white,60,120,1,0,-1,.1,360,-6)
    
    //sound_play(snd_groundhit)
    audio_play_sound(snd_groundhit,10,0)
}


if vspeed &gt; 0 &amp;&amp; !place_free(x,y+vspeed)
{move_contact(270) jump=1}
vspeed = 0
if place_meeting(x,y+1,obj_block5){ice=true}else{ice=false}


if instance_exists(obj_block3){
    if other.object_index=obj_block3.object_index{
        if keyGot=true{
            keyGot=false
            with(obj_block3){
                instance_destroy()
            }
        }

    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_health">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(other){instance_destroy()}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_key">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(other){instance_destroy()}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_gem">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(other){instance_destroy()}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ping=0
var msgid = buffer_read( buffer , buffer_u8 );
obj_server.TPCmsg=msgid
//script_addline(string(buffer_get_size(buffer))+"    "+string(current_time)+"     "+string(msgid),c_black)
switch( msgid ) {//Case statements go here...
    
    case 1:
        obj_client2.char=readbyte()
        obj_client2.x=readshort()
        obj_client2.y=readshort()
        obj_client2.visible=true
        obj_client2.alarm[0]=1
    break;
    
    /*
    case 5:
        //obj_client2.hspeed2=readfloat()
        //obj_client2.vspeed=readfloat()
        //obj_client2.x=readshort()+.5
        //obj_client2.y=readshort()
        //with(obj_client2){if !place_free(x+hspeed,y){hspeed=0 hspeed2=0}}
    if instance_exists(obj_client2){
        obj_client2._left=readbyte()
        obj_client2._right=readbyte()
        obj_client2._up=readbyte()
        var xx=readshort();
        var yy=readshort();
        if point_distance(xx,yy,obj_client2.x,obj_client2.y)&gt;20{
            obj_client2.x=xx
            obj_client2.y=yy
        }
    }
    break;
    */
    
    case 6:
        keyGot=readbyte()
    break;
    
    case 7://GetShovel
        obj_client2.shovel=readbyte()
    break;
    
    case 8://ShovelAnimate
        obj_client2.shovelanimate=false
        obj_client2.gunshovel=0
        obj_client2.rightmouse=true
        obj_client2.x=readushort()
        obj_client2.y=readushort()
    break;
    
    case 9:
        obj_client2.PlayerMouseRot=readshort()
    break;
    
    case 10:
        obj_control.alarm[7]=readushort()
    break;
    
    
    case 11://going down
        if room=rm_game{
            obj_control.Playerxx=obj_player.x
            obj_control.Score+=50
            obj_client2.y=0
            obj_control._floor+=obj_control.moneyCheckMult
            room_goto(rm_game2)
            global.FloorEarned=true
        }else{
            obj_control.Playerxx=obj_player.x
            obj_control.Score+=50
            obj_client2.y=0
            obj_control._floor+=obj_control.moneyCheckMult
            global.keyGot=false
            global.FloorEarned=true
            room_restart()
        }
    break;
    
    case 15://clicking
        obj_client2.mouseleft=readbyte()
    break;
    
    case 16:
        obj_client2.gun=readbyte()-5
    break;
    
    case 17://updating mis vars
        obj_client2.gun0charge=readfloat()
        obj_client2.BulletShoot=readbyte()
        obj_client2.BulletCount=readbyte()
        obj_client2.ptntGunAmount=readbyte()
        obj_client2.heat=readfloat()
        obj_client2.Maxheat=readfloat()
    break;
    
    
    case 20:
        case_message_bullets()
    break;
    
    case 23:
        case_message_updateboss0()
    break;
    
    /*case 25:
        case_message_ping();
    break;
    case 26:
        case_message_ping2()
    break;
    */
    
    case 27:
        if instance_exists(obj_select){
            obj_select.clientclick=readbyte()-1
        }
    break;
    
    case 28:
        case_player_dead()
    break;
    
    case 29:
        case_message_revive()
    break;
    
    case 30:
        case_message_shieldUpdate();
    break;
    
    case 31:
        case_message_updatePowers();
    break;  
    
    case 32:
        var tmp=readbyte();
        if tmp=1{
            obj_control.alarm[7]=1
        }
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room=rm_game2{
    alarm[3]=1
}

keyGot=false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
if CHRISTMAS=true{
    var yy=sprite_get_yoffset(sprite_index)-3
    var xx=(2*-1)*(image_xscale)
    //if image_xscale=-1{xx=0}
    if sprite_index=spr_idle{
    switch(round(image_index)){
        case 0: yy+=0 break;
        case 1: yy+=1 break;
        case 2: yy+=1 break;
        case 3: yy+=0 break;
        case 4: yy+=0 break;
    }
    }
    draw_sprite_ext(spr_santahat,0,x+xx,y-yy,image_xscale,1,0,c_white,1)
}
if PARTY=1{
    var yy=sprite_get_yoffset(sprite_index)-3
    var xx=(-1)*(image_xscale)
    //if image_xscale=-1{xx=0}
    if sprite_index=spr_idle{
    switch(round(image_index)){
        case 0: yy+=0 break;
        case 1: yy+=1 break;
        case 2: yy+=1 break;
        case 3: yy+=0 break;
        case 4: yy+=0 break;
    }
    }
    draw_sprite_ext(spr_santahat,0,x+xx,y-yy,image_xscale/2.5,1/2.5,0,partyHatColour,1)
}

if obj_control.player_health&lt;=0{
    //scr_revive2()
    draw_set_color(c_black)
    draw_set_alpha(1)
    draw_rectangle(obj_player.x-8,obj_player.y-8,obj_player.x+8,obj_player.y-4,false)
    draw_set_color(c_ltgray)
    draw_rectangle(obj_player.x-7,obj_player.y-7,obj_player.x-7+(14*(obj_client2.deadCharge/obj_client2.deadChargeMax)),obj_player.y-5,false)
}


if dead=true{
    if deadCharge&gt;=deadChargeMax{
        dead=false
        getHealed=false
        deadCharge=0
        deadChargeMax+=50
        canmove=true
        friction=0
        image_angle=0
        view_xview=0
        view_yview=0
        view_wview=480
        view_hview=272
        exit
    }
    image_speed=0
    image_index=0
    draw_set_color(c_black)
    draw_set_alpha(1)
    draw_rectangle(x-8,y-8,x+8,y-4,false)
    draw_set_color(c_ltgray)
    draw_rectangle(x-7,y-7,x-7+(14*(deadCharge/deadChargeMax)),y-5,false)
    draw_set_color(c_red)
    draw_set_font(global.font0)
    draw_set_halign(fa_center)
    if point_distance(obj_player.x,obj_player.y,obj_client2.x,obj_client2.y)&gt;50{
        draw_text_transformed(x+random_range(-1,1),y-40+random_range(-1,1),"!REVIVE!",1,1,0)
    }else{
        if os_type=os_android{
            draw_text_transformed(x+random_range(-1,1),y-40+random_range(-1,1),"Tap!",1,1,0)
        }else{
            draw_text_transformed(x+random_range(-1,1),y-40+random_range(-1,1),"Mash Space!",1,1,0)
        }
    }
    if point_distance(obj_player.x,obj_player.y,obj_client2.x,obj_client2.y)&lt;100{
        xx=obj_player.x-(view_wview/2)
        yy=obj_player.y-(view_hview/2)
        view_wview+=(240-view_wview)/3
        view_hview+=(136-view_hview)/3
        view_xview+=(xx-view_xview)/2
        view_yview+=(yy-view_yview)/2
    }else{
        xx=0
        yy=0
        view_wview+=(480-view_wview)/3
        view_hview+=(272-view_hview)/3
        view_xview+=(xx-view_xview)/2
        view_yview+=(yy-view_yview)/2
    }



}



if keyGot=true{
    draw_sprite(spr_key,0,x,y-(sprite_get_height(sprite_index)-sprite_get_yoffset(sprite_index)))
}
if heat=0 &amp;&amp; canshoot=false &amp;&amp; alarm[4]=-1{canshoot=true}

if shovel!=-1{
    var dir=PlayerMouseRot
    var xscale=1;
    if dir&gt;90 &amp;&amp; dir&lt;270{xscale=-1}
    
    var img=spr_shovel0;
    var rot=45;
    var _scale=1
    switch(shovel){
        case 0: img=spr_shovel0 rot=45 break;
        case 1: img=spr_shovel1 rot=0  break;
        case 2: img=spr_shovel2 rot=90 _scale=0.25 xscale=1 break;
        case 3: img=-1 break;
    }
    
    image_xscale=xscale
    
    if shovelanimate=false &amp;&amp; gunshovel=0 &amp;&amp; img!=-1{
        draw_sprite_ext(img,0,x+lengthdir_x(10,dir),y+lengthdir_y(10,dir),xscale*_scale,xscale*_scale,rot+dir,c_white,1)
    }
    
    
    if rightmouse=1 &amp;&amp; shovelanimate=false{gunshovel=0
        shovelanimate=true
        rightmouse=false
        canshovel=false
        shovelanimateRot=PlayerMouseRot//point_direction(obj_player.x,obj_player.y,mouse_x,mouse_y)
        switch(shovel){
            case 0: alarm[1]=13 shovelanimateRot-=(45*xscale) break;
            case 1: alarm[1]=13 shovelanimateRot-=(45*xscale) break;
            case 2: alarm[1]=3 break;
            case 3: alarm[1]=5 break
        }
        var push=-5;
        if shovel=0 || shovel=1 || shovel=3{
        scr_shake2()
            //sound_play(snd_dig)
            if !instance_exists(obj_client){
            audio_play_sound(snd_dig,2,0)
            pointx=x//+lengthdir_x(10,other.shovelanimateRot)
            pointy=y//+lengthdir_y(10,other.shovelanimateRot)
            nn=instance_create(pointx,pointy,obj_col0)
            nn.image_angle=PlayerMouseRot//point_direction(obj_player.x,obj_player.y,mouse_x,mouse_y)
            with(par_block){
                if place_meeting(x,y,obj_col0){
                    helth-=(5/point_distance(x,y,other.x+lengthdir_x(10,other.shovelanimateRot),other.y+lengthdir_y(10,other.shovelanimateRot)))*10
                }
            }
            
            with(par_monster){
                if place_meeting(x,y,obj_col0){
                    helth-=(5/point_distance(x,y,other.x+lengthdir_x(10,other.shovelanimateRot),other.y+lengthdir_y(10,other.shovelanimateRot)))*10
                }
            }
            
            
            with(obj_col0){instance_destroy()}
            }
        }
        p_hspeed2=hspeed2
        hspeed2=dcos(point_direction(x,y,x+lengthdir_x(15,PlayerMouseRot),y+lengthdir_y(15,PlayerMouseRot)))*push
        hspeed=dcos(point_direction(x,y,x+lengthdir_x(15,PlayerMouseRot),y+lengthdir_y(15,PlayerMouseRot)))*push
        alarm[2]=1
        
        
        with(obj_dynamite){
            if point_distance(x,y,other.x+lengthdir_x(10,other.shovelanimateRot),other.y+lengthdir_y(10,other.shovelanimateRot))&lt;25{
                helth-=(1/point_distance(x,y,other.x+lengthdir_x(10,other.shovelanimateRot),other.y+lengthdir_y(10,other.shovelanimateRot)))*10
                helth--
            }
        }
    }
    
    if shovelanimate=true{
        img=spr_shovel0animte;
        rot=0;
        _scale=1
        switch(shovel){
            case 0: img=spr_shovel0animte rot=0 break;
            case 1: img=spr_shovel0animte rot=0 break;
            case 2: img=spr_shovel2animte rot=90 _scale=0.25 break;
        }
        with(obj_control){
            draw_sprite_ext(img,-1,other.x+lengthdir_x(10,other.shovelanimateRot),other.y+lengthdir_y(10,other.shovelanimateRot),
            1*other._scale,other.image_xscale*other._scale,other.rot+other.shovelanimateRot,c_white,1)
        }
    }
    
}

    
if gun!=-1{

        if char=11{
            gun=-1
            exit
        }
        
        //Drawing the gun
        var img=spr_gun0;
        var rot=0;
        var gunxscale=0.33
        var gunyscale=0.33
        var subimg=0
        switch(gun){
            case 0: img=spr_gun0 rot=0 gunxscale=0.4 gunyscale=0.4 break;
            case 1: img=spr_gun1 rot=0 gunxscale=0.4 gunyscale=0.4 break;
            case 2: img=spr_gun2 rot=0 gunxscale=0.4 gunyscale=0.4 if canshoot=0{subimg=1} break;
            case 3: img=spr_gun3 rot=0 gunxscale=0.4 gunyscale=0.4 if canshoot=0{subimg=1} break;
            case 4:img=spr_gun4 rot=0 gunxscale=0.4 gunyscale=0.4
                if round(current_time/3)*3=current_time{
                    part_burst(x-100,x+100,y-100,y+100,1,0,.2,c_white,90,180,0,1,-1,.1,360,-1)
                    if !instance_exists(obj_bullet4){
                        with(obj_parts){
                            if point_distance(x,y,other.x,other.y)&lt;100{
                                gravity=(1/(point_distance(x,y,other.x,other.y)))/2
                                gravity_direction=other.PlayerMouseRot//point_direction(x,y,obj_player.x,obj_player.y)
                            }
                        }
                    }else{
                        with(obj_parts){
                            if point_distance(x,y,obj_bullet4.x,obj_bullet4.y)&lt;100{
                                gravity=(1/(point_distance(x,y,obj_bullet4.x,obj_bullet4.y)))*2
                                gravity_direction=point_direction(x,y,obj_bullet4.x,obj_bullet4.y)
                            }
                        }
                    
                    }
                }
            break;
            case 5: img=spr_gun5 rot=0 gunxscale=0.25 gunyscale=0.25 if canshoot=0{subimg=1} break;
            case 6: img=spr_gun6 rot=0 gunxscale=0.25 gunyscale=0.25 break;
            case 8: img=spr_gun8 rot=0 gunxscale=0.4 gunyscale=0.4 if canshoot=0{subimg=1} break;
            case 9: img=spr_gun5 rot=0 gunxscale=0.5 gunyscale=0.5 break;
            
        }
        
        if mouseleft_released{
         if audio_is_playing(snd_lighting){audio_stop_sound(snd_lighting)}
         if audio_is_playing(snd_flamethrower){audio_stop_sound(snd_flamethrower)}
         if audio_is_playing(snd_laser2){audio_stop_sound(snd_laser2)}
        }
        
        var dir=PlayerMouseRot
        var xscale=1;
        
        if dir&gt;90 &amp;&amp; dir&lt;270{xscale=-1}
        if shovelanimate=false &amp;&amp; gunshovel=1{
            var color=make_colour_rgb(255,255-heat,255-heat)
            draw_sprite_ext(img,subimg,x+lengthdir_x(10,dir),y+lengthdir_y(10,dir),gunxscale,gunyscale*xscale,rot+dir,color,1)
            switch(gun){
            case 8:
                draw_sprite_ext(img,subimg,x+lengthdir_x(10,dir),y+lengthdir_y(10,dir),1,0.5,rot+dir,color,1)
            break;
            default:
                draw_sprite_ext(img,subimg,x+lengthdir_x(10,dir),y+lengthdir_y(10,dir),gunxscale,gunyscale*xscale,rot+dir,color,1)
            break;
        }
        }
        
        //shooting
        
        
    }
    
    
    if (mouseleft=1) &amp;&amp; canshoot=1{
        gunshovel=1 canshoot=false
        //scr_set_mouse(spr_mousesprite,gun7[gun])
        //Push back
        var push=0;
        ///Crits///
        var CritHit=false
        damagemult=1;
        var temp=round((money)/1000);
        if gun=1 || gun=3{
            damagemult+=(temp*(player_GemDamageMult*0.1))
        }else{
            damagemult+=(temp*player_GemDamageMult)
        }
        
        if irandom(100)&lt;Crits*100{
            damagemult=damagemult*2
            CritHit=true
        }
        
        switch(gun){
            case 0:
            push=0
            if gun0charge&gt;0{gun0charge-=0.1// show_message(current_time)
                repeat(BulletCount){
                    var reload=(2)-BulletShoot;
                    if reload&lt;2{reload=2}
                    alarm[4]=reload
                    push=0
                    //var jumpx,jumpy;
                    jumpx=global.mouse_endx2
                    jumpy=global.mouse_endy2
                    with(par_monster){
                        if instance_exists(obj_findpoint2){
                            nn=instance_nearest(x,y,obj_findpoint2)
                            if point_distance(nn.x,nn.y,x,y)&lt;45{
                                other.jumpx=x
                                other.jumpy=y
                                if instance_exists(obj_server){helth-=1*obj_client2.damagemult}
                                other.gun0charge-=0.025
                                image_blend=_color
                                alarm[0]=3
                                hitBullet=true
                                scr_electricjump2()
                            }
                        }
                        
                    }
                    with(obj_crate){
                        if instance_exists(obj_findpoint2){
                            nn=instance_nearest(x,y,obj_findpoint2)
                            if point_distance(nn.x,nn.y,x,y)&lt;45{
                                other.jumpx=x
                                other.jumpy=y
                                helth-=1*obj_client2.damagemult
                                other.gun0charge-=0.025
                                scr_electricjump2()
                            }
                        }
                        
                    }
                    
                    with(obj_dynamite){
                        if instance_exists(obj_findpoint2){
                            nn=instance_nearest(x,y,obj_findpoint2)
                            if point_distance(nn.x,nn.y,x,y)&lt;25{
                                other.jumpx=x
                                other.jumpy=y
                                helth-=0.025
                                other.gun0charge-=0.1
                                alarm[0]=3
                                scr_electricjump2()
                            }
                        }
                        
                    }
                    
                    draw_set_color(c_white)
                    scr_lightning(x+lengthdir_x(20,dir),y+lengthdir_y(20,dir),0,jumpx,jumpy,0,4,6)
                    jumps=5
                    for(i=0;i&lt;jumps;i++){_jump[i]=-1}
                }
            gun0charge-=.5
            if !sound_isplaying(snd_lighting){sound_loop(snd_lighting)}
            if !audio_is_playing(snd_lighting){audio_play_sound(snd_lighting,3,99)}
            }else{alarm[4]=1 //if sound_isplaying(snd_lighting){sound_stop(snd_lighting)}
                if audio_is_playing(snd_lighting){audio_stop_sound(snd_lighting)}}
            break;
            
            
            
            
            case 2:
                if alarm[6]=-1{//show_message(BulletCount)
                    repeat(BulletCount){
                        var reload=(1)-BulletShoot;
                        if reload&lt;1{reload=1}
                        alarm[4]=reload
                        nn=instance_create(x+lengthdir_x(10,dir),y+lengthdir_y(10,dir),obj_bullet2)
                        nn.direction=dir+choose(random(abs(-1/BulletCount)*5),random(abs(-1/BulletCount)*5)*-1)
                        nn.speed=5
                        nn.image_xscale=xscale*gunxscale
                        nn.image_yscale=gunyscale
                        nn.damage=.4*obj_client2.damagemult
                        nn.canbreak=0
                         push=0
                        part_type_direction(obj_control.ps3,dir-5,dir+5,0,0)
                        //obj_player.x+lengthdir_x(10,dir),obj_player.y+lengthdir_y(10,dir)
                        part_emitter_region(obj_control.ps3,obj_control.em3,x+lengthdir_x(25,dir),x+lengthdir_x(25,dir),
                        y+lengthdir_y(25,dir),y+lengthdir_y(25,dir),1,0)
                        part_emitter_burst(obj_control.ps3,obj_control.em3,obj_control.pt3,5)
                    }
                    heat+=.5
                    //if !sound_isplaying(snd_flamethrower){sound_loop(snd_flamethrower)}
                    if !audio_is_playing(snd_flamethrower){audio_play_sound(snd_flamethrower,2,0)}
                    if heat&gt;Maxheat{
                        alarm[6]=1
                        //if sound_isplaying(snd_flamethrower){sound_stop(snd_flamethrower)}
                        if audio_is_playing(snd_flamethrower){audio_stop_sound(snd_flamethrower)}
                    }
                }else{}
            break;
            case 4:
                push=0 canshoot=1
            break;
            
            case 5:
                draw_gun5(clamp(5-(BulletShoot/5),1,room_speed),dir,(obj_client2.damagemult)+1,random(abs(-2/BulletCount)*5),obj_client2)//
                push=-.5
            break;
            case 6:
                draw_gun6(5-(BulletShoot),dir,((obj_client2.damagemult)+1)/15,random(abs(-2/BulletCount)*5),obj_client2)//
                push=0
            break;
            
            case 8:
                draw_gun8(dir,(obj_client2.damagemult)+1,obj_client2)
                push=0
            break;
            
            case 9:
                draw_gun9(clamp(5-(BulletShoot/5)*2,1,room_speed),dir,.5*obj_client2.damagemult,obj_client2)
                push=.5
            break;
            
            
        }
        
    //Push back
    if push!=0{
        p_hspeed2=hspeed2
        hspeed2=dcos(PlayerMouseRot)*push
        hspeed=dcos(PlayerMouseRot)*push
        alarm[2]=1
    }
    
    
    if mouseleft=true &amp;&amp; canshoot=1{
        switch(gun){
            case 4://plasma
                movespeed=0.75
                jumpheight=5.5
                gunshovel=1 canshoot=1 plasmaGunCharge+=(1+(BulletShoot/5))
                if plasmaGunCharge&gt;MaxplasmaGunCharge{plasmaGunCharge=MaxplasmaGunCharge}
                global.PartsColor0=16777215
                global.PartsColor1=16747677
                global.PartsColor2=8388608
                if plasmaGunCharge&lt;MaxplasmaGunCharge{
                    //if !sound_isplaying(snd_charge){sound_play(snd_charge)}
                    if !audio_is_playing(snd_charge){audio_play_sound(snd_charge,2,0)}
                }else{//sound_stop(snd_charge)
                    audio_stop_sound(snd_charge)
                }
                part_burst(x-irandom(100),x+irandom(100),y-irandom(100),y+irandom(100),5,0,.2,c_white,90,180,0,1,-1,.1,360,-1)
            break;
        }
    }
    
    
    if mouseleft_released=true{
        //do nothing---check received messages
        movespeed=1.5
        jumpheight=7
        
    }
    
    
    
    
}
    
    
    
    
    
    
    



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///shield
if char=7 &amp;&amp; ShowShield=true{
    eg_update_quick(grid,1.1)
    
    draw_set_color(c_white)
    eg_draw_tex(grid,x-32,y-32,sprite_get_texture(spr_shield,0));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>6,9</point>
    <point>10,10</point>
  </PhysicsShapePoints>
</object>
