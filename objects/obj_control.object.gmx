<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_parts2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_number(obj_control)&gt;1{instance_destroy() exit}
GetKeyValue=-1
global.OffSet=25
//GetKeyValue2=http_get_file("http://65.29.167.233/highscore.php?"+encrypt("act")+"="+encrypt("GetTime"),"prog.txt")
GetKeyValue2=-1

GunPrevious=-1

moneyCheckMult=irandom_range(1,500)
_floor=0
_floorCheck=0
_floorBoss=-1
money=0
global.MoneyEarned=false
global.FloorEarned=false
ScoreMult=1
ScoreMultEarn=false
pScoreMult=string_invert("1")
ScoreMultC=choose(c_white,c_red,c_blue,c_green,c_purple,c_orange,c_yellow)
ScoreMultS=1
ScoreMultR=0
pScore=0
pScore2=0
ScoreS=1
ScoreC=0
ScoreC2=11

p_floor=0
global.SubmitScores=true

MoneyCheck=0

moneyScale=1
pmoney=0
player_health=100
player_maxhealth=100
player_justdied=true
player_exp=0
player_expLevel=6
player_shield=0
player_shieldMax=player_shield

shovel=-1
shovelanimate=false
shovelanimateRot=0
canshovel=true

shovel1[0,0]="Shovel"
shovel1[0,1]="Better than a stick"
shovel1[0,2]=spr_shovel0
shovel1[0,3]=0//mouse sprite index

shovel1[1,0]="PickAx"
shovel1[1,1]="Atleast I gave you something"
shovel1[1,2]=spr_shovel1
shovel1[1,3]=0

shovel1[2,0]="Jack Hammer"
shovel1[2,1]="Hammer those problems away"
shovel1[2,2]=spr_shovel2

shovel1[3,0]="Claws"
shovel1[3,1]="For the best of felines"
shovel1[3,2]=spr_shovel3
shovel1[3,3]=0


gunpickupAlpha=0
gunpickup=0

gun=-1
pgun=-1
canshoot=true
pcanShoot=true
_cnsht=true

totalguns=10
gun1[0]="Lightning Gun"//name
gun2[0]=obj_gun0
gun3[0]=0.25//scale
gun4[0]=spr_gun0
gun5[0]="A really powerful tazer. Runs off of static electricity"//desc
gun6[0]=90//rot
gun7[0]=5

gun0charge=0
gun0chargeMax=100
chargeJump=10

heat=0
Maxheat=60*3
jumpx=0
jumpy=0
jumps=5
for(i=0;i&lt;15;i++){_jump[i]=-1}



gun1[1]="TNT Launcher"//name
gun2[1]=obj_gun1
gun3[1]=0.25//scale
gun4[1]=spr_gun1
gun5[1]="Absorb and blast TNT! Blow up everything in sight!"//name
gun6[1]=0
gun7[1]=1

gun1[2]="Flame Thrower"//name
gun2[2]=obj_gun2
gun3[2]=0.25//scale
gun4[2]=spr_gun2
gun5[2]="Re-Toast your foes to death"//name
gun6[2]=0
gun7[2]=8

gun1[3]="Rocket Launcher"//name
gun2[3]=obj_gun3
gun3[3]=0.25//scale
gun4[3]=spr_gun3
gun5[3]="Blow those monsters away!"//name
gun6[3]=0
gun7[3]=2

gun1[4]="Plasma Gun"//name
gun2[4]=obj_gun4
gun3[4]=0.25//scale
gun4[4]=spr_gun4
gun5[4]="Hurts just as much as getting burned alive"//name
gun6[4]=0
gun7[4]=3

gun1[5]="Mini-Gun"//name
gun2[5]=obj_gun5
gun3[5]=0.25//scale
gun4[5]=spr_gun5
gun5[5]="TF2 Style. Buy more hats! Praise Gaben!"//name
gun6[5]=0
gun7[5]=3


gun1[6]="Laser Cannon"//name 
gun2[6]=obj_gun6
gun3[6]=0.25//scale
gun4[6]=spr_gun6
gun5[6]="Shoots a laser which bounces off of walls!"
gun6[6]=315
gun7[6]=3
gun6Speed=0

gun1[7]="Plasma Whip"//name
gun2[7]=obj_gun7
gun3[7]=0.25//scale
gun4[7]=spr_gun7_2
gun5[7]="Whip your enemies back to hell"//name
gun6[7]=0
gun7[7]=3

gun1[8]="LightSaber"//name
gun2[8]=obj_gun8
gun3[8]=1//scale
gun4[8]=spr_gun8
gun5[8]="What more could you want?! Its a LightSaber!"//name
gun6[8]=0
gun7[8]=0
gun8Speed=0

gun1[9]="Turnip Gun"//name
gun2[9]=obj_gun9
gun3[9]=.5//scale
gun4[9]=spr_gun10
gun5[9]="Vote for turnip!"//name
gun6[9]=0
gun7[9]=0

/*
gun1[9]="Bouncer"//name
gun2[9]=obj_gun8
gun3[9]=1//scale
gun4[9]=spr_gun8
gun5[9]=""//name
gun6[9]=0
gun7[9]=0
*/


gun1[10]="Plasma Coil"//name
gun2[10]=obj_gun8
gun3[10]=1//scale
gun4[10]=spr_gun8
gun5[10]="What more could you want?! Its a LightSaber!"//name
gun6[10]=0
gun7[10]=0

gun1[11]="Dicer"//name
gun2[11]=obj_gun8
gun3[11]=1//scale
gun4[11]=spr_gun8
gun5[11]="Shred your enemies to bits!"//name
gun6[11]=0
gun7[11]=0



/*
gun1[99]="Gravity Glove"//name
gun2[99]=obj_gun99
gun3[99]=0.25//scale
gun4[99]=spr_gun99
gun5[99]="Pickup and toss your foes about"//name
gun6[99]=0
gun7[99]=3
*/


plasmaGunCharge=0
MaxplasmaGunCharge=175
tempplasma=0

tntGunAmount=50
tntGunAmountMax=100
tntGunFlash=0

Playerxx=0

gunshovel=0

alarm[11]=5

global.PartsColor0=-1
global.PartsColor1=-1
global.PartsColor2=-1
global.PartsCollide=false

scr_parts()



global.font0 = font_add_sprite(spr_font0, ord(" "), 0, -5);


spawnboss0=false

global.key=false
global.keyGot=false
global.death_start=false
global.death_y=0


global.PartyHatColour=choose(c_white,c_black,c_green,c_lime,c_yellow,c_orange,c_aqua,c_blue,c_purple,c_olive,c_red,c_maroon)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///powerUp vars

ShootSpeed=0
MoveSpeed=0
JumpHeight=0
Bullets=0
BulletStrength=0
BulletShoot=0
Regen=0//amount
Fire=0
Explode=false
global.FireMonster=0
Jump=1
BulletCount=1


Crits=0
damagemult=0
PlayerLightDamage=false
player_magnet=16
player_moss=0
player_chestOpen=0
player_MonsterKill=0
player_GemDamageMult=0
player_DigPower=10
player_DigSpeed=45
player_MonsterMeeleHeal=0
player_MonsterExplode=0
player_MonsterFire=0
player_MonsterPosoin=0
player_IceSlide=true
player_Freeze=1



pCrits=0
pPlayerLightDamage=false
pplayer_magnet=16
pplayer_moss=0
pplayer_chestOpen=0
pplayer_MonsterKill=0
pplayer_GemDamageMult=0
pplayer_DigPower=10
pplayer_DigSpeed=45
pplayer_MonsterMeeleHeal=0
pplayer_MonsterExplode=0
pplayer_MonsterFire=1
pplayer_MonsterPosoin=0
pplayer_IceSlide=true
pplayer_Freeze=0






PlayerRage=5
PlayerRageMax=10
PlayerRageMode=false
PreviousPlayerHealth=0
PlayerRageTime=60
PlayerRageShovel=-1
PlayerRageGun=-1
global.BLOOD=false


PlayerSlow=0
PlayerSlowMax=10
PlayerSlowMode=false




//setup powerup stacking
for(i=0;i&lt;10;i++){
    poweruptxt[i]=""
    poweruptxt2[i]=""
    powerupspr[i]=-1
    powerupLife[i]=0
    powerupAlpha[i]=1
}





PlayerMouseRot=0



global.ps2 = part_system_create()
global.pt2 = part_type_create()
global.em2 = part_emitter_create(global.ps2)

part_type_shape(global.pt2,10)
part_type_size(global.pt2,0.04,0.10,0,0)
part_type_speed(global.pt2,0,2,0,0)
part_type_direction(global.pt2,90,90,0,0)
part_type_color3(global.pt2,255,25025,255)
part_type_alpha2(global.pt2,1,0)
part_type_blend(global.pt2,1)
part_type_life(global.pt2,4,16)
part_type_gravity(global.pt2,0.04,0)

global.mouse_endx=0
global.mouse_endy=0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///stats
maxMoney=0
Score=0
MonstersKilled=0
ChestsOpened=0
SubmitScore=-1



mouse_xprevious=mouse_x
mouse_yprevious=mouse_y
global.GamePadMouse=0


global.Insult="&lt;insult&gt;"
insultGet=-1//http_get(IP+"insult.php")

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///meta
global.ServerIP="127.0.0.1"
if LAUNCHTWO=true &amp;&amp; os_type=os_windows &amp;&amp; global.ONLINE=true{
    /// Dual-start
if (parameter_count() == 3) {
    shell_execute(parameter_string(0),
        parameter_string(1) + " " +
        parameter_string(2) + " " +
        parameter_string(3) + " -secondary")
    window_set_position(window_get_x() - window_get_width() div 2 - 8, window_get_y())
    // &lt;primary instance&gt;
    window_set_caption("P1")
    instance_create(0,0,obj_server)
}
if (parameter_count() == 4) {
    window_set_position(window_get_x() + window_get_width() div 2 + 8, window_get_y())
    // &lt;secondary instance&gt;
    window_set_caption("P2")
    //instance_create(0,0,obj_client)
    instance_create(0,0,obj_findmatch)
    global.ONLINE=true
}
}



for(i=0;i&lt;1000;i++){
    global.MonsterList[i]=-1//id
}

pclick=0
click=0

global.GameClock=0

pgun0charge=0
pBulletShoot=0
pBulletCount=0
ptntGunAmount=0
pheat=0
pMaxheat=0
pShield=1






global.ServerIP="127.0.0.1"
if global.ONLINE=true &amp;&amp; LAUNCHTWO=false{
    if show_question("Host?")=true{
        instance_create(0,0,obj_server)
    }else{
        //
        if show_question("Auto-find Server?")=true{
            instance_create(0,0,obj_findmatch)
        }else{
            global.ServerIP=get_string("IP?","")
            instance_create(0,0,obj_client)
        }
    }
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///andriod
global.AndriodPressShovel=false
global.AndriodPressGun=false

global.GunShovelToggle=0

global.AndriodPlay=false
if os_type=os_android{
    global.AndriodPlay=true
}
//DELETE THIS
//global.AndriodPlay=true

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///cheats
CheatConsole=false
ConsoleX=0
ConsoleY=0
ConsoleW=150
ConsoleH=75

ConsoleDrag=false

GodMode=false

ClickX=0
ClickY=0

BrowsePowers=false
BrowseGuns=false

global.RoomGenObj=-1
for(i=0;i&lt;10000;i++){
    PowerUp[i]=-1
}
var Count=0;
for(i=0;i&lt;9999;i++){
    if object_exists(i){
        if string_count("obj_PowerUp",object_get_name(i)){
            PowerUp[Count]=i
            Count++
        }
    }
}
PowerUpMax=Count

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///newDead

//setup powerup counts
for(i=0;i&lt;1000;i++){
    PowerCount[i]=-1//id
    PowerCountS[i]=-1//sprite
    PowerCountShow[i]=false
}
PowerCountNum=0
PowerCountNum2=0.01
DrawDeathOptions=false

//lines
_linex[0]=-1000
_liney[0]=0
_linec[0]=16777215
_liner[0]=0

_linex[1]=-1000
_liney[1]=0
_linec[1]=80328
_liner[1]=0

_linex[2]=-1000
_liney[2]=0
_linec[2]=2368548
_liner[2]=0




_linex[3]=-1000
_liney[3]=-250
_linec[3]=80328
_liner[3]=-35

_linex[4]=-1000
_liney[4]=-250
_linec[4]=2368548
_liner[4]=-35

_linex[5]=-1000
_liney[5]=-250
_linec[5]=16777215
_liner[5]=-35


_tweenLine=0




//Options menu 1
DeathOp[0]="Restart"
DeathOpx[0]=0
DeathOpy[0]=50
DeathOpa[0]=0
DeathOp[1]="Continue"
DeathOpx[1]=0
DeathOpy[1]=50
DeathOpa[1]=0
DeathOp[2]="Quit"
DeathOpx[2]=0
DeathOpy[2]=50
DeathOpa[2]=0

DeathOp0Select=-1
tweenDeathOp=0

DeathSelect0=0



global.surface_blood = surface_create(room_width,room_height);
global.surface_walls = surface_create(room_width,room_height);


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CollMask
for(i=0;i&lt;round(room_width/8);i++){
    for(a=0;a&lt;round(room_height/8);a++){
        _Floor[i,a]=0
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Chars

maxselect=8
maxselect2=3//WAN

ini_open("Chars.ini")
for(i=1;i&lt;maxselect+1;i++){
    global._person[i]=ini_read_real("char",string(i),0)
}
global._person[1,7]=1

for(i=1;i&lt;maxselect2+1;i++){
    global._Wperson[i]=ini_read_real("charW",string(i),0)
}
ini_close()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///NewBlockDraw
BlockSurface=surface_create(480,272)

global.AnsweredQuestion=false
global.MyQuestion=""
global.AnsweredQuestion=false
global.AnsweredQuestionResultStr=""

FullScreenToggleTemp=window_get_fullscreen()


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///atmosphere particles
/*
if room!=rm_menu{
    //part_emitter_region(ps1,em1,0,room_width,0,room_height,0,0)
    //part_emitter_burst(ps1,em1,pt1,1)
    if obj_tuthelp.GraphicsParticles=2{
        part_burst(0,room_width,0,room_height,1,0,.2,c_white,90,180,0,1,-1,.1,360,-1)
    }
    
}*/
if room!=rm_menu{
    if obj_tuthelp.GraphicsParticles&gt;0{
    part_emitter_region(ps1,em1,0,room_width,0,room_height,0,0)
    part_emitter_burst(ps1,em1,pt1,1)
    }
    
}
ScoreC++
if ScoreC&gt;11{
    ScoreC=0
    if abs(round(Score/moneyCheckMult)-pScore2)&gt;ScoreMult*50{
        ScoreMult++
        ScoreC2=11
        ScoreMultEarn=true
    }else{
        if ScoreC2&lt;0{
            if ScoreMult&gt;1{
                ScoreMult--
                ScoreC2=11
                ScoreMultEarn=true
            }
        }else{
            ScoreC2-=1
            
        }
    }
    pScore2=round(Score/moneyCheckMult)
    
}
alarm[11]=5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///holder
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///RedoBlockSurface
if surface_exists(obj_control.BlockSurface){
    //surface_free(obj_control.BlockSurface)
    //obj_control.BlockSurface = surface_create(480,272);
    surface_set_target(obj_control.BlockSurface)
    draw_clear_alpha(c_white,0)
    with(par_block){if other.id!=id{
        draw_self()
        if crack!=0{
            draw_sprite(spr_crack,crack,x,y)
        }
    }}
    surface_reset_target()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Rage
PlayerRageTime=0
if PlayerRageTime&gt;0{
    scr_shake2()
    obj_player.depth=-24
    alarm[8]=1
    PlayerRageTime--
    PlayerRage+=0.025
    obj_player.canmove=false
    obj_player.gravity=0
    obj_player.hspeed=0
    obj_player.vspeed=0
    if place_free(obj_player.x,obj_player.y-.5){
        obj_player.y+=-1
    }
    obj_player.sprite_index=spr_player_2white
    global.PartsColor0=16711422
    global.PartsColor1=2792
    global.PartsColor2=862
    global.PartsCollide=true
    var _yy_y;
    if collision_line(obj_player.x,obj_player.y,obj_player.x,obj_player.y+500,par_block,0,1)&gt;0{
        _yy_y=collision_line(obj_player.x,obj_player.y,obj_player.x,obj_player.y+500,par_block,0,1).y
        part_burst(obj_player.x-16,obj_player.x+16,_yy_y-4,_yy_y-1,
        2,0,.2,c_white,60,120,1,0,-1,.1,360,-25)
    }
    if instance_exists(obj_parts){
        with(obj_parts){
            if depth=-25{
                speed=.5
                direction=point_direction(x,y,obj_player.x,obj_player.y)
            }
        }
    }
    
    
}else{
    obj_player.depth=-5
    PlayerRageTime=60
    obj_player.canmove=true
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Death Clock!
global.death_y+=0.25/(PlayerSlowMode+1)

alarm[7]=1

if obj_player.y&lt;global.death_y{
    player_health-=2/(PlayerSlowMode+1)
}
if player_health&lt;=0{
    alarm[7]=-1   
}

with(par_monster){
    if y&lt;global.death_y{
        instance_destroy()
    }
}
with(par_block){
    if object_index!=obj_block2
    || object_index!=obj_block3{
        if y&lt;global.death_y{
            instance_destroy()
            sound_play(snd_blockbrake)
            scr_shake2()
            nn=instance_create(x,y,obj_blockdead)
            nn.sprite_index=sprite_index
            nn.image_index=image_index
            nn.depth=-100
        }
    }
}

if global.ONLINE=true &amp;&amp; global.death_start=false{
    clearbuffer()
    writebyte(32)
    writebyte(1)
    sendmessage(global.clienttcp)
}

global.death_start=true

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///holder

heat--
if heat&lt;=0{
    alarm[6]=-1
    alarm[3]=1
    heat=0
}else{
    alarm[6]=1
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///holder
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///holder
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canshoot=true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///holder
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canshovel=true

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shovelanimate=false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mouse_xprevious=display_mouse_get_x()
mouse_yprevious=display_mouse_get_y()

if MoneyCheck!=money/moneyCheckMult{
    if global.MoneyEarned=true{
        MoneyCheck=money/moneyCheckMult
        global.MoneyEarned=false
    }else{
        show_message("Cheater  ;)#Your scores will not be posted online")
        global.SubmitScores=false
        MoneyCheck=money/moneyCheckMult
    }
}
if p_floor!=_floor/moneyCheckMult{
    if global.FloorEarned=true{
        MoneyCheck=money/moneyCheckMult
        global.FloorEarned=false
    }else{
        show_message("Cheater  ;)#Your scores will not be posted online")
        global.SubmitScores=false
        MoneyCheck=money/moneyCheckMult
    }
    p_floor=_floor/moneyCheckMult
}


global.MoneyEarned=false
global.FloorEarned=false

if keyboard_check_pressed(vk_f12){
    CheatConsole=!CheatConsole
    obj_pause.CheatConsole=CheatConsole
    global.SubmitScores=false
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///BlockFullScreenFix
if FullScreenToggleTemp!=window_get_fullscreen(){
    FullScreenToggleTemp=window_get_fullscreen()
    surface_free(obj_control.BlockSurface)
    obj_control.BlockSurface = surface_create(480,272);
    surface_set_target(obj_control.BlockSurface)
    draw_clear_alpha(c_white,0)
    with(par_block){if other.id!=id{draw_self()}}
    surface_reset_target()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///gameClock
global.GameClock++

money=money/moneyCheckMult
pmoney=pmoney/moneyCheckMult
maxMoney=maxMoney/moneyCheckMult

Score=Score/moneyCheckMult

_floor=_floor/moneyCheckMult

moneyCheckMult=irandom_range(1,500)
money=money*moneyCheckMult
pmoney=pmoney*moneyCheckMult
maxMoney=maxMoney*moneyCheckMult

Score=Score*moneyCheckMult

_floor=_floor*moneyCheckMult
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///snow
if os_type!=os_android{
if instance_exists(obj_block5){
global.PartsColor0=16704981
global.PartsColor1=16704981
global.PartsColor2=16704981
global.PartsCollide=false
part_burst(0,room_width,1,1,
1,0,.5,c_white,550,650,1,1,0,.1,0,-6)


with(obj_parts){
    if depth=-6{
        
        gravity=0.05
        
        if vspeed&gt;.5{vspeed=.5}
        hspeed+=(0-hspeed)/100
        
        
        if collide=false{
            if y&gt;64{
                collide=true
            }
        }
    }
}
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///going down

//check if the player has dug down
if instance_exists(obj_player){
    if obj_player.y&gt;room_height{
        _floor+=obj_control.moneyCheckMult
        if room=rm_game{global.FloorEarned=true
            if obj_player.x&gt;room_width
            or obj_player.x&lt;0{
                obj_player.x=room_width/2
            }
            Playerxx=obj_player.x
            Score+=50*obj_control.moneyCheckMult
            obj_player.cancollide=false
            if global.ONLINE=true{
                clearbuffer()
                writebyte(11)
                sendmessage(global.clienttcp)
            }
            room_goto(rm_game2)
        }else{global.FloorEarned=true
            if obj_player.x&gt;room_width
            or obj_player.x&lt;0{
                obj_player.x=room_width/2
            }
            Playerxx=obj_player.x
            global.keyGot=false
            if global.ONLINE=true{
                global.keyGot=false
                clearbuffer()
                writebyte(11)
                sendmessage(global.clienttcp)
                obj_client2.keyGot=false
            }
            
            room_restart()
        }
    }
    
}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///player control
if player_exp&gt;player_expLevel{
    player_exp=0
    player_expLevel+=5
    sound_play(snd_powerup)
    alarm[4]=room_speed
}

if player_IceSlide=false{
    if instance_exists(obj_player){
        obj_player.ice=false
    }
}


if player_health&gt;0{
    if player_health&lt;player_maxhealth{
        player_health+=(Regen/250)
    }
}

if player_health&gt;player_maxhealth{
    player_health=player_maxhealth
}



if player_shieldMax!=0{
    if player_shield&lt;player_shieldMax{
        if alarm[5]=-1{
            player_shield+=0.1
        }
    }
}


if instance_exists(obj_player) &amp;&amp; gun=0{
    var dir=PlayerMouseRot;//point_direction(obj_player.x,obj_player.y,mouse_x,mouse_y);
    nn=instance_create(obj_player.x+lengthdir_x(10,dir),obj_player.y+lengthdir_y(10,dir),obj_findpoint)
    nn.direction=dir
    nn.speed=16
}


if maxMoney&lt;money{
    maxMoney=money
}


moneyScale+=(1-moneyScale)/5
if pmoney!=money{
    moneyScale=1.5
    pmoney=money
}



////////////RAGE
if global.char=2 &amp;&amp; _floorBoss!=_floor/moneyCheckMult{
    if instance_exists(obj_player){
        
        
        if PlayerRageMode=false{
            if PreviousPlayerHealth&gt;player_health{
                if PlayerRage&lt;PlayerRageMax{
                    PlayerRage+=PreviousPlayerHealth-player_health
                }
                PreviousPlayerHealth=player_health
            }
            if PreviousPlayerHealth!=player_health{
                PreviousPlayerHealth=player_health
            }
        }
        
        if PlayerRage&gt;PlayerRageMax{
            PlayerRage=PlayerRageMax
        }
        
        if PlayerRageMode=false &amp;&amp; PlayerRage&gt;=PlayerRageMax{
            if keyboard_check_released(ord("Q")) or gamepad_button_check_pressed(0,gp_face3){
                PlayerRageMode=true
                alarm[8]=1
                PlayerRageShovel=shovel
                PlayerRageGun=gun
                PlayerRageHealth=player_health
                shovel=-1
                gun=-1
                //if !sound_isplaying(snd_rage){sound_loop(snd_rage)}
                //if !audio_is_playing(snd_rage){audio_play_sound(snd_rage,1,0)}
                //audio_pause_sound(snd_main)
            }
        }else{
            //show_message
        }
        if PlayerRageMode=true &amp;&amp; PlayerRage&gt;0{
            PlayerRage-=0.025
            player_health=PlayerRageHealth
            obj_player.image_blend=choose(c_blue,c_red,c_orange,c_green,c_lime)
            
            if obj_player.spr_idle=spr_player_2idle{
                
                obj_player.spr_idle=spr_player_2rageidle2
                obj_player.spr_run=spr_player_2ragerun2
            }
            
        }else{
            if PlayerRageMode=true{
                PlayerRageMode=false
                //if audio_is_playing(snd_rage){audio_stop_sound(snd_rage)}
                //audio_resume_sound(snd_main)
                obj_player.spr_idle=spr_player_2idle
                obj_player.spr_run=spr_player_2run
                shovel=PlayerRageShovel
                gun=PlayerRageGun
                PlayerRageShovel=-1
                PlayerRageGun=-1
                obj_player.image_blend=c_white
            }
        }
    }
}


if global.char=6 &amp;&amp; PlayerSlow=PlayerSlowMax &amp;&amp; PlayerSlowMode=false{
    if keyboard_check_pressed(ord("Q")) or gamepad_button_check_pressed(0,gp_face3){
        PlayerSlowMode=true
        PlayerSlow-=0.1
    }
}
if global.char=6 &amp;&amp; PlayerSlow&lt;PlayerSlowMax{
    if PlayerSlowMode=false{
        PlayerSlow+=0.02
        audio_sound_pitch(obj_sound.currentMainSound,1)
    }else{
        if PlayerSlow&gt;0{
            PlayerSlow-=0.035
            audio_sound_pitch(obj_sound.currentMainSound,0.5)
            
            if instance_exists(obj_bullet1){
                with(obj_bullet1){
                    if Slow=false{
                        Slow=true
                        alarm[1]=alarm[1]*2
                        grav=grav/2
                        hspeed=hspeed/2
                        vspeed=vspeed/2
                    }
                }
            }
            if instance_exists(obj_bullet3){
                with(obj_bullet3){
                    if Slow=false{
                        Slow=true
                        speed2=speed2/2
                    }
                }
            }
            if instance_exists(obj_bullet4){
                with(obj_bullet4){
                    if Slow=false{
                        Slow=true
                        speed2=speed2/2
                    }
                }
            }
            
        }else{
            PlayerSlowMode=false
        }
    }
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///rotation
var rot=false
if instance_exists(obj_player){
if gamepad_get_device_count()&gt;0
&amp;&amp; gamepad_is_connected(0)=1
&amp;&amp; check_padpress()=true{
    if round(gamepad_axis_value(0, gp_axisrh)*2)/2!=0
    || round(gamepad_axis_value(0, gp_axisrv)*2)/2!=0{
        PlayerMouseRot=point_direction(0, 0, gamepad_axis_value(0, gp_axisrh), gamepad_axis_value(0, gp_axisrv));
    }
    rot=true
    global.GamePadMouse=1
    //show_debug_message(PlayerMouseRot)
}


if display_mouse_get_x()!=mouse_xprevious
&amp;&amp; display_mouse_get_y()!=mouse_yprevious
&amp;&amp; instance_exists(obj_player){
    rot=true
    PlayerMouseRot=point_direction(obj_player.x,obj_player.y,mouse_x,mouse_y)
    global.GamePadMouse=0
}

if os_type=os_android{
    if obj_joystick.dragging=true{
        global.GamePadMouse=0
        PlayerMouseRot=point_direction(obj_joystick.x,obj_joystick.y,obj_joystick.x+obj_joystick.joy_x,obj_joystick.y+obj_joystick.joy_y)
        rot=true
        global.AndriodPressShovel=true
    }else{
         global.AndriodPressShovel=false
    }
}


if rot=false{
    PlayerMouseRot=point_direction(obj_player.x,obj_player.y,mouse_x,mouse_y)
    //global.GamePadMouse=0
}

}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///updating the player vars
if global.ONLINE=true &amp;&amp; instance_exists(obj_client2){
    var send=false;
    if shovel!=obj_client2.pshovel{
        obj_client2.pshovel=shovel
        clearbuffer()
        writebyte(7)
        writebyte(shovel)
        sendmessage(global.clienttcp)
        send=true
    }
    if pgun!=gun{
        pgun=gun
        clearbuffer()
        writebyte(16)
        writebyte(gun+5)
        sendmessage(global.clienttcp)
        send=true
    }
    
    if instance_exists(obj_client2) &amp;&amp; room!=rm_menu{
    if pBulletShoot!=BulletShoot 
    //or pgun0charge!=gun0charge
    or pBulletCount!=BulletCount
    //or ptntGunAmount!=tntGunAmount
    //or pheat!=heat
    //or pMaxheat!=Maxheat
    {
        pgun0charge=gun0charge
        pBulletShoot=BulletShoot
        pBulletCount=BulletCount
        ptntGunAmount=tntGunAmount
        pheat=heat
        pMaxheat=Maxheat
        
        clearbuffer()
        writebyte(17)
        writefloat(gun0charge)
        writebyte(BulletShoot)
        writebyte(BulletCount)
        writebyte(tntGunAmount)
        writefloat(heat)
        writefloat(Maxheat)
        sendmessage(global.clienttcp)
    
        //send=true
    }
    }
    
    click=mouse_check_button(mb_left)
    if click=0{click=(gamepad_button_check(0,gp_shoulderrb))}
    if pclick!=click// or mouse_check_button_pressed(mb_left)
    //or (gamepad_button_check_pressed(0,gp_shoulderrb))
    {
        clearbuffer()
        writebyte(15)
        if global.GamePadMouse=0{
            writebyte(mouse_check_button(mb_left))
        }else{
            writebyte(gamepad_button_check(0,gp_shoulderrb))
        }
        sendmessage(global.clienttcp)
        pclick=click
    }
    
    
    //updating the shiled
    if global.char=7{
        if pShield=1
        &amp;&amp; player_shield&lt;=0{
            pShield=0
            clearbuffer()
            writebyte(30)
            writebyte(0)
            sendmessage(global.clienttcp)
        }else{
            pShield=1
        }
    }
    scr_updatePowers();
    
    
    
    
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if room!=rm_menu{
    var ran=irandom_range(5,10)
    var value=50
    repeat(ran){
        nn=instance_create(mouse_x,mouse_y,obj_gem)
        nn.value=(value)/ran
        nn.image_xscale=nn.value/5
        nn.image_yscale=nn.value/5
        nn.speed=irandom(3)
        nn.direction=random(360)
        nn.image_angle=direction
    }
    
}*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.SubmitScores=true{
testVar="HTTP INSIDE";
if ds_map_find_value(async_load, "id") == GetKeyValue2 &amp;&amp; obj_tuthelp.GeneralHighScore=true
    {
    var status = ds_map_find_value(async_load, "status");
    testVar="HTTP FIRST STEP";
 
    if status = 0
       {
       downloaded=1;
       
       file=file_bin_open("prog.txt",0)
        var _str="",testText="";
        size = file_bin_size(file);
        for(i=0;i&lt;size;i++){
            testText+=chr(file_bin_read_byte(file))
        }
        file_bin_close(file)
        global.OffSet=real((rc4(testText,"xPWnLVha3kNSYsPFTXg72Xna")))
       //show_message(global.OffSet)
        SubmitScore=http_post_string(IP+"highscore.php?",encrypt2("act")+"="+encrypt2("Submit")+"&amp;"+encrypt("name")+"="+string(encrypt(global.PlayerName))+
        "&amp;"+encrypt("char")+"="+encrypt(string(global.char))+
        "&amp;"+encrypt("score")+"="+encrypt(string(Score/moneyCheckMult))+"&amp;"+encrypt("floor")+"="+encrypt(string(_floor/moneyCheckMult))+"&amp;"+encrypt("money")+"="+encrypt(string(maxMoney/moneyCheckMult))+
        "&amp;"+encrypt("monster")+"="+encrypt(string(MonstersKilled))+"&amp;"+encrypt("chest")+"="+encrypt(string(ChestsOpened)))
        
        
       }else{
           testVar="HTTP STATUS != 0";
       }
       
       
}

///SubmitScore
if ds_map_find_value(async_load, "id") == SubmitScore
    {
    if ds_map_find_value(async_load, "status") &gt;= 0
       {
       r_str = ds_map_find_value(async_load, "result");
       show_message(r_str)
       if r_str="failed"{//show_message("Failed...")
            //do it again  :D
            GetKeyValue2=http_get_file(IP+"high_score.php?"+encrypt2("act")+"="+encrypt2("GetTime"),"prog.txt")
       }
       
       }
    }
}
    

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///insults
if ds_map_find_value(async_load, "id") == insultGet{
    if ds_map_find_value(async_load, "status") &gt;= 0{
       global.Insult = ds_map_find_value(async_load, "result");
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//special vars
global.PartyHatColour=choose(c_white,c_black,c_green,c_lime,c_yellow,c_orange,c_aqua,c_blue,c_purple,c_olive,c_red,c_maroon)
if room=rm_game{
    if global.char=1{
        BulletShoot=5
    }
    if global.char=7{
        player_shield=10
        player_shieldMax=player_shield
    }
    if global.char=6{
        if Regen=0{Regen=5}
    }
}
if _floorBoss!=_floor/moneyCheckMult{
    global.key=false
    global.death_start=false
    global.death_y=0
    if room=rm_game2{
        if gun=-1 &amp;&amp; _floor/moneyCheckMult&gt;1{
            gun=choose(0,2,3)
        }
        if gun=-1 &amp;&amp; _floor/moneyCheckMult=1 &amp;&amp; instance_exists(obj_client){
            gun=choose(0,1,2,3,4)
        }
        if global.ONLINE=false{
            alarm[7]=irandom_range(room_speed*15,room_speed*30)
        }else{
            obj_client2.y=0
            obj_client2.keyGot=false
            scr_monsterreset()
            if instance_exists(obj_server){
                var alarm7=irandom_range(room_speed*15,room_speed*30)
                clearbuffer()
                writebyte(10)
                writeushort(alarm7)
                sendmessage(global.clienttcp)
                alarm[7]=alarm7+1
            }//else{alarm[7]=-1}
        }
    }
}
global.key=false
global.death_start=false
global.death_y=0
if global.ONLINE=true
&amp;&amp; instance_exists(obj_client){
    alarm[7]=-1
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room=rm_game2{
    nn=instance_create(Playerxx,0,obj_player)
    nn.phelth=player_health
    if _floor=1{
        //instance_create(room_width/2,50,gun2[irandom(totalguns-1)])
    }
    if audio_is_playing(snd_ambiantsound0){
        audio_stop_sound(snd_ambiantsound0)
        /*
        if !sound_isplaying(snd_main){
            sound_loop(snd_main)
            obj_sound.currentMainSound=snd_main
        }
        */
        if !audio_is_playing(snd_main)
        &amp;&amp; !audio_is_playing(snd_main1)
        &amp;&amp; !audio_is_playing(snd_main2)
        &amp;&amp; !audio_is_playing(snd_main3)
        &amp;&amp; !audio_is_playing(snd_main4)
        &amp;&amp; !audio_is_playing(snd_main5){randomize()
            var snd=choose(snd_main,snd_main1,snd_main2,snd_main3,snd_main4,snd_main5);
            audio_play_sound(snd,1,1)
            obj_sound.currentMainSound=snd
        }
        
    }
}

if room=rm_game{
    var shovelspawn=choose(item_shovel0,item_shovel1);
    instance_create(304,96,shovelspawn)
    
    //sound_loop(snd_ambiantsound0)
    audio_sound_set_track_position(snd_ambiantsound0,random(100))
    audio_play_sound(snd_ambiantsound0,1,1)
    obj_sound.currentMainSound=snd_ambiantsound0
}

part_particles_clear(ps)
surface_free(global.surface_blood);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///PlayersPowers
if room=rm_game{

    switch(global.char){
        case 3:
            repeat(2){
                instance_create(obj_player.x,obj_player.y,obj_PowerUpSilver1)
            }
        break;
        
        
        case 4:
            repeat(5){
                instance_create(obj_player.x,obj_player.y,obj_PowerUpBronze1)
            }
        break;
        
        case 5:
            repeat(2){
                instance_create(obj_player.x,obj_player.y,obj_PowerUpSilver5)
            }
        break;
        
        case 10:
            repeat(5){
                instance_create(obj_player.x,obj_player.y,PowerUp[irandom(PowerUpMax)])
            }
        break;
        
        case 12:
            obj_control.Crits=1
            obj_control.player_health+=500
            obj_control.player_maxhealth+=500
        break;
        
        
    }
    
    
}


if instance_exists(obj_client2) &amp;&amp; room=rm_game{
    obj_client2.alarm[0]=25
    scr_unlockPlayer(10)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CollisionMask

if room=rm_game{
for(i=0;i&lt;round(room_width/8);i++){
    for(a=0;a&lt;round(room_height/8);a++){
        if place_meeting((i*8),(a*8),par_block){
            _Floor[i,a]=1
        }else{
            _Floor[i,a]=0
        }
        
    }
}
}
if surface_exists(BlockSurface){surface_free(BlockSurface)}
alarm[9]=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_free(global.surface_blood);

scr_monsterreset()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if player_health&lt;=0 &amp;&amp; global.ONLINE=false{
    if alarm[4]=-1{
        scr_drawDead2()
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///blood

if BLOOD2=true/* &amp;&amp; global.BLOOD=true*/{
if !surface_exists(global.surface_blood)
{
   global.surface_blood = surface_create(room_width,room_height);
}
else
{
if view_current == 0
    {
        draw_set_alpha(1)
        draw_set_color(c_white)
        draw_surface(global.surface_blood,0,0);
    }
}
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_control</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if room!=rm_menu{
    
    //scr_drawDead();

    scr_drawInterface();

    
    
    ////////////////////////////////////////////////////////////////////////////////////////SHOVEL///////////////////////////////////////////////////////////////////////
    scr_drawPlayerShovel()
    
    
    
///////////////////////////////////////////////////////////////////////GUNS//////////////////////////////////////////////////////////
if gun!=-1{
    //anti-android
    if os_type!=os_android{
         global.GunShovelToggle=1
    }
    if global.char=11{
        gun=-1
        exit
    }
    
    if alarm[2]!=-1{
        var xxoff;
        xxoff=sprite_get_width(gun4[gun])*(1/(sprite_get_height(gun4[gun])/16))
        draw_set_alpha(1)
        draw_set_font(global.font0) 
        draw_sprite_part(spr_messagebox,0,0,0,10,sprite_get_height(spr_messagebox),2,2)
        draw_sprite_stretched(spr_messagebox2,0,12,2,xxoff+25+(string_width(gun5[gun])*0.333),sprite_get_height(spr_messagebox))
        draw_sprite_part(spr_messagebox,0,54,0,10,sprite_get_height(spr_messagebox),xxoff+12+25+(string_width(gun5[gun])*0.333),2)
        
        draw_set_color(c_white)
        draw_text_ext_transformed(xxoff+25,8,gun1[gun],5,999999,0.5,0.5,0)
        draw_text_ext_transformed(xxoff+25,21,gun5[gun],12,999999,0.333,0.333,0)
        
        draw_sprite_stretched(gun4[gun],0,8,10,sprite_get_width(gun4[gun])*(1/(sprite_get_height(gun4[gun])/16)),16)
        
    }
    //Drawing the gun
    var img=spr_gun0;
    var rot=0;
    var gunxscale=0.33
    var gunyscale=0.33
    var subimg=0
    switch(gun){
        case 0: img=spr_gun0 rot=0 gunxscale=0.4 gunyscale=0.4 break;
        case 1: img=spr_gun1 rot=0 gunxscale=0.4 gunyscale=0.4 break;
        case 2: img=spr_gun2 rot=0 gunxscale=0.4 gunyscale=0.4 if canshoot=0{subimg=1} break;
        case 3: img=spr_gun3 rot=0 gunxscale=0.4 gunyscale=0.4 if canshoot=0{subimg=1} break;
        case 4:
            if canshoot=1 &amp;&amp; plasmaGunCharge=0{subimg=0} 
            if canshoot=0{subimg=1} 
            if canshoot=1 &amp;&amp; plasmaGunCharge&gt;0 &amp;&amp; plasmaGunCharge&lt;MaxplasmaGunCharge{
                if round(current_time/15)*15=current_time{
                    tempplasma=!tempplasma
                }
                if tempplasma=0{
                    subimg=2
                }else{
                    subimg=3
                }
            }
            if canshoot=1 &amp;&amp; plasmaGunCharge=MaxplasmaGunCharge{
                if round(current_time/15)*15=current_time{
                    tempplasma=!tempplasma
                }
                if tempplasma=0{
                    subimg=4
                }else{
                    subimg=3
                }
            } 
            
            img=spr_gun4 rot=0 gunxscale=0.4 gunyscale=0.4
        break;//plasma particle burst here
        
        default:
            img=gun4[gun];
            rot=gun6[gun]
        break;
    }
    var dir=PlayerMouseRot//point_direction(obj_player.x,obj_player.y,mouse_x,mouse_y)
    var xscale=1;
    
    if dir&gt;90 &amp;&amp; dir&lt;270{xscale=-1}
    if shovelanimate=false &amp;&amp; gunshovel=1{
        var color=make_colour_rgb(255,255-heat,255-heat)
        switch(gun){
            case 8:
                draw_sprite_ext(img,subimg,obj_player.x+lengthdir_x(10,dir),obj_player.y+lengthdir_y(10,dir),1,0.5,rot+dir,color,1)
            break;
            default:
                draw_sprite_ext(img,subimg,obj_player.x+lengthdir_x(10,dir),obj_player.y+lengthdir_y(10,dir),gunxscale,gunyscale*xscale,rot+dir,color,1)
            break;
        }
    }
    //Light saber sound effect
    if shovelanimate=false &amp;&amp; gunshovel=1{
        if gun=8{
            if !audio_is_playing(snd_gun8Idle){
                audio_play_sound(snd_gun8Idle,2,99)
            }
        }
    }else{
        if audio_is_playing(snd_gun8Idle){
            audio_stop_sound(snd_gun8Idle)
        }
    }
    
    if mouse_check_button_released(mb_left){
         //if sound_isplaying(snd_lighting){sound_stop(snd_lighting)}
         //if sound_isplaying(snd_flamethrower){sound_stop(snd_flamethrower)}
         if audio_is_playing(snd_lighting){audio_stop_sound(snd_lighting)}
         if audio_is_playing(snd_flamethrower){audio_stop_sound(snd_flamethrower)}
         if audio_is_playing(snd_laser2){audio_stop_sound(snd_laser2)}
    }
    if gun=1{
        scr_draw_aim(.5,10,PlayerMouseRot,obj_player.id)
    }
    
    pcanShoot=_cnsht
    _cnsht=1;
    var drag=false
    if os_type=os_android{
        /*
        if scr_hover2(16,view_hview-96-16,16+56+48+32+16,view_hview-64+48){
            _cnsht=0
        }*/
        for(i=0;i&lt;obj_touchscreen.numButtons;i++){
            var xx,yy,ww,hh;
            xx=obj_touchscreen.buttonx[i]/obj_touchscreen.guiScale
            yy=obj_touchscreen.buttony[i]/obj_touchscreen.guiScale
            ww=obj_touchscreen.buttonw[i]/obj_touchscreen.guiScale
            hh=obj_touchscreen.buttonh[i]/obj_touchscreen.guiScale
            if scr_hover2(xx,yy,xx+ww,yy+hh){
                _cnsht=0  
            }
            draw_set_color(c_black)
            draw_set_alpha(0.5)
            draw_rectangle(xx,yy,xx+ww,yy+hh,false)
        }
        
        if obj_joystick.dragging=true{
            _cnsht=1
            drag=true
        }
        
        
    }
    
    if (mouse_check_button(mb_left) or gamepad_button_check(0,gp_shoulderrb) or drag=true) &amp;&amp; canshoot=1 &amp;&amp; _cnsht=1 &amp;&amp; global.GunShovelToggle=1{
        gunshovel=1 canshoot=false
        scr_set_mouse(spr_mousesprite,gun7[gun])
        //Push back
        var push=-5;
        
        ///Crits///
        var CritHit=false
        damagemult=1;
        var temp=round((money/moneyCheckMult)/1000);
        if gun=1 || gun=3{
            damagemult+=(temp*(player_GemDamageMult*0.1))
        }else{
            damagemult+=(temp*player_GemDamageMult)
        }
        
        if irandom(100)&lt;Crits*100{
            damagemult=damagemult*2
            CritHit=true
        }
        
        
        switch(gun){
            case 0:
            push=0
            if irandom(5)=0{}else{CritHit=false}
            
            if gun0charge&gt;0{gun0charge-=0.1
                repeat(BulletCount){
                    var reload=(2)-BulletShoot;
                    if reload&lt;2{reload=2}
                    alarm[3]=reload
                    push=0
                    PlayerLightDamage=false
                    //var jumpx,jumpy;
                    jumpx=global.mouse_endx
                    jumpy=global.mouse_endy
                    with(par_monster){
                        if instance_exists(obj_findpoint){
                            nn=instance_nearest(x,y,obj_findpoint)
                            if point_distance(nn.x,nn.y,x,y)&lt;45{
                                other.jumpx=x
                                other.jumpy=y
                                helth-=1*obj_control.damagemult
                                other.gun0charge-=0.025
                                obj_control.PlayerLightDamage=true
                                image_blend=_color
                                alarm[0]=3
                                hitBullet=true
                                scr_electricjump()
                            }
                        }
                        
                    }
                    with(obj_crate){
                        if instance_exists(obj_findpoint){
                            nn=instance_nearest(x,y,obj_findpoint)
                            if point_distance(nn.x,nn.y,x,y)&lt;45{
                                other.jumpx=x
                                other.jumpy=y
                                helth-=1*obj_control.damagemult
                                other.gun0charge-=0.025
                                scr_electricjump()
                            }
                        }
                        
                    }
                    
                    with(obj_dynamite){
                        if instance_exists(obj_findpoint){
                            nn=instance_nearest(x,y,obj_findpoint)
                            if point_distance(nn.x,nn.y,x,y)&lt;25{
                                other.jumpx=x
                                other.jumpy=y
                                helth-=0.5*obj_control.damagemult
                                other.gun0charge-=0.025
                                alarm[0]=3
                                scr_electricjump()
                            }
                        }
                        
                    }
                    
                    draw_set_color(c_white)
                    scr_lightning(obj_player.x+lengthdir_x(20,dir),obj_player.y+lengthdir_y(20,dir),0,jumpx,jumpy,0,4,6)
                    if CritHit=true &amp;&amp; PlayerLightDamage=true{
                        if !instance_exists(obj_crits){
                            nn=instance_create(jumpx,jumpy,obj_crits)
                            nn._color=choose(c_orange,c_purple,c_blue,c_aqua,c_green,c_lime)
                            obj_control.player_health+=(obj_control.player_moss)
                        }
                    }
                    jumps=5
                    for(i=0;i&lt;jumps;i++){_jump[i]=-1}
                }
            gun0charge--
            if !sound_isplaying(snd_lighting){sound_loop(snd_lighting)}
            if !audio_is_playing(snd_lighting){audio_play_sound(snd_lighting,3,99)}
            }else{alarm[3]=1 //if sound_isplaying(snd_lighting){sound_stop(snd_lighting)}
                if audio_is_playing(snd_lighting){audio_stop_sound(snd_lighting)}}
            break;
            
            
            
            
            case 1:
                if alarm[10]&gt;1{
                    //tntGunAmount+=1
                    push=0
                }
            
                if tntGunAmount&gt;0
                or alarm[10]=round(alarm[10]/20)*20{
                repeat(BulletCount){
                    var reload=(10)-BulletShoot/2;
                    if reload&lt;8{reload=8}
                    alarm[3]=reload
                    nn=instance_create(obj_player.x+lengthdir_x(10,dir),obj_player.y+lengthdir_y(10,dir),obj_bullet1)
                    nn.direction=dir+choose(random(abs(-1/BulletCount)*5),random(abs(-1/BulletCount)*5)*-1)
                    nn.speed=10
                    nn.damage=1*obj_control.damagemult
                    if CritHit=true{nn.Crit=true}
                    nn.canbreak=1
                    nn.depth=depth-1
                    //sound_play(snd_shoot1) push=-1.5
                    audio_play_sound(snd_shoot1,2,0)
                    if global.ONLINE=true{
                        nn.alarm[1]=irandom_range(room_speed/2,room_speed)
                        clearbuffer()
                        writebyte(20)
                        writebyte(gun)
                        writeshort(nn.direction)
                        writeshort(obj_player.x+lengthdir_x(10,dir))
                        writeshort(obj_player.y+lengthdir_y(10,dir))
                        writebyte(nn.speed+10)
                        writeshort(nn.alarm[1])
                        sendmessage(global.clienttcp)
                    }
                }
                tntGunAmount-=1
            }else{
                alarm[3]=1
            }
            break;
            
            case 2:
                if irandom(5)=0{}else{CritHit=false}
                if alarm[6]=-1{
                    repeat(BulletCount){
                        var reload=(1)-BulletShoot;
                        if reload&lt;1{reload=1}
                        alarm[3]=reload
                        nn=instance_create(obj_player.x+lengthdir_x(10,dir),obj_player.y+lengthdir_y(10,dir),obj_bullet2)
                        nn.direction=dir+choose(random(abs(-1/BulletCount)*5),random(abs(-1/BulletCount)*5)*-1)
                        nn.speed=5
                        nn.image_xscale=xscale*gunxscale
                        nn.image_yscale=gunyscale
                        nn.damage=.4*obj_control.damagemult
                        if CritHit=true{nn.Crit=true}
                        nn.canbreak=0
                         push=0
                        part_type_direction(ps3,dir-5,dir+5,0,0)
                        //obj_player.x+lengthdir_x(10,dir),obj_player.y+lengthdir_y(10,dir)
                        part_emitter_region(ps3,em3,obj_player.x+lengthdir_x(25,dir),obj_player.x+lengthdir_x(25,dir),
                        obj_player.y+lengthdir_y(25,dir),obj_player.y+lengthdir_y(25,dir),1,0)
                        part_emitter_burst(ps3,em3,pt3,5)
                    }
                    heat+=.5
                    //if !sound_isplaying(snd_flamethrower){sound_loop(snd_flamethrower)}
                    if !audio_is_playing(snd_flamethrower){audio_play_sound(snd_flamethrower,2,0)}
                    if heat&gt;Maxheat{
                        alarm[6]=1
                        //if sound_isplaying(snd_flamethrower){sound_stop(snd_flamethrower)}
                        if audio_is_playing(snd_flamethrower){audio_stop_sound(snd_flamethrower)}
                    }
                }else{}
            break;
            
            case 3:
                repeat(BulletCount){
                    var reload=(35)-BulletShoot;
                    if reload&lt;1{reload=1}
                    alarm[3]=reload
                    nn=instance_create(obj_player.x+lengthdir_x(10,dir),obj_player.y+lengthdir_y(10,dir),obj_bullet3)
                    nn.direction=dir+random(abs(-2/BulletCount)*5)
                    nn.speed=0
                    nn.speed2=6
                    nn.image_xscale=xscale*gunxscale
                    nn.image_yscale=gunyscale
                    //show_message(obj_control.damagemult)
                    nn.damage=20*obj_control.damagemult
                    if CritHit=true{nn.Crit=true}
                    nn.canbreak=1
                    push=-1.5
                    //sound_play(choose(snd_rocket0,snd_rocket1,snd_rocket2))
                    audio_play_sound(choose(snd_rocket0,snd_rocket1,snd_rocket2),2,0)
                    
                    if global.ONLINE=true{
                        nn.alarm[1]=irandom_range(room_speed/2,room_speed)
                        clearbuffer()
                        writebyte(20)
                        writebyte(gun)
                        writeshort(nn.direction)
                        writeshort(obj_player.x+lengthdir_x(10,dir))
                        writeshort(obj_player.y+lengthdir_y(10,dir))
                        writebyte(nn.speed2+10)
                        writebyte(nn.damage)
                        writefloat(nn.image_xscale+25)
                        writefloat(nn.image_yscale+25)
                        sendmessage(global.clienttcp)
                    }
                    
                }
            break;
            case 4:
                push=0 canshoot=1
            break;
            
            case 5:
                draw_gun5(clamp(5-(BulletShoot/5),1,room_speed),dir,(obj_control.damagemult)+1,random(abs(-2/BulletCount)*5),obj_player)//
                push=-.5
            break;
            
            case 6:
                draw_gun6(5-(BulletShoot),dir,((obj_control.damagemult)+1)/15,random(abs(-2/BulletCount)*5),obj_player)//
                push=0
                alarm[3]=1
            break;
            
            case 7:
                draw_gun7(clamp(5-(BulletShoot/5),1,room_speed),dir,(obj_control.damagemult)+1,random(abs(-2/BulletCount)*5),obj_player)//
                push=0
            break;
            
            case 8:
                draw_gun8(dir,(obj_control.damagemult)+1,obj_player)
                push=0
            break;
            
            case 9:
                draw_gun9(clamp(5-(BulletShoot/5)*2,1,room_speed),dir,.5*obj_control.damagemult,obj_player)
                push=.5
            break;
            
            
        }
        
    //Push back
    if push!=0{
        obj_player.hspeed2=dcos(PlayerMouseRot)*push
        obj_player.hspeed=dcos(PlayerMouseRot)*push
    }
    
    
    }
    
    
    //Charge on the gun?
    if (mouse_check_button(mb_left) or gamepad_button_check(0,gp_shoulderrb)) &amp;&amp; canshoot=1 &amp;&amp; _cnsht=true &amp;&amp; global.GunShovelToggle=1{
        switch(gun){
            case 4://plasma
                obj_player.movespeed=0.75
                obj_player.jumpheight=5.5
                gunshovel=1 canshoot=1 plasmaGunCharge+=(1+(BulletShoot/5))
                if plasmaGunCharge&gt;MaxplasmaGunCharge{plasmaGunCharge=MaxplasmaGunCharge}
                
                
                //new parts
                if obj_tuthelp.GraphicsParticles=1{
                part_emitter_region(ps5,em5,obj_player.x-75,obj_player.x+75,obj_player.y-75,obj_player.y+75,0,0)
                part_emitter_burst(ps5,em5,pt5,2)
                
                if !instance_exists(obj_bullet4){
                    part_type_gravity(pt5,0.01,PlayerMouseRot)
                }
                }
                if obj_tuthelp.GraphicsParticles=2{
                
                //make more atomostphere parts around player+absorb thing
                part_burst(obj_player.x-100,obj_player.x+100,obj_player.y-100,obj_player.y+100,1,0,.2,c_white,90,180,0,1,-1,.1,360,-2.5)
                with(obj_parts){
                    if depth=-2.5 &amp;&amp; point_distance(x,y,obj_player.x,obj_player.y)&lt;100{
                        gravity=(1/(point_distance(x,y,obj_player.x,obj_player.y)))/2
                        gravity_direction=point_direction(x,y,obj_player.x,obj_player.y)//
                    }
                }
                
                
                global.PartsColor0=16777215
                global.PartsColor1=16747677
                global.PartsColor2=8388608
                part_burst(obj_player.x-irandom(75),obj_player.x+irandom(75),obj_player.y-irandom(75),obj_player.y+irandom(75),1,0,.3,c_white,90,180,0,1,-1,.1,360,-2.3)
                
                if !instance_exists(obj_bullet4){
                    with(obj_parts){
                        if depth=-2.3 &amp;&amp; point_distance(x,y,obj_player.x,obj_player.y)&lt;100{
                            gravity=(1/(point_distance2(x,y,obj_player.x,obj_player.y)))/2
                            gravity_direction=other.PlayerMouseRot//point_direction(x,y,obj_player.x,obj_player.y)//
                        }
                    }
                }else{
                    with(obj_parts){
                        if depth=-2.3 &amp;&amp; point_distance(x,y,obj_bullet4.x,obj_bullet4.y)&lt;100{
                            gravity=(1/(point_distance(x,y,obj_bullet4.x,obj_bullet4.y)))*2
                            gravity_direction=point_direction(x,y,obj_bullet4.x,obj_bullet4.y)
                        }
                    }
                }
                }
                
                
                if plasmaGunCharge&lt;MaxplasmaGunCharge{
                    //if !sound_isplaying(snd_charge){sound_play(snd_charge)}
                    if !audio_is_playing(snd_charge){audio_play_sound(snd_charge,2,0)}
                }else{//sound_stop(snd_charge)
                    audio_stop_sound(snd_charge)
                }
                
            break;
        }   
    }
    if mouse_check_button_released(mb_left) or gamepad_button_check_released(0,gp_shoulderrb){obj_player.movespeed=1.5}
    
    
    //Plasma gun parts
    if obj_tuthelp.GraphicsParticles=2 &amp;&amp; gun=4{
        //make more atomostphere parts around player+absorb thing
        part_burst(obj_player.x-100,obj_player.x+100,obj_player.y-100,obj_player.y+100,1,0,.2,c_white,90,180,0,1,-1,.1,360,-2.5)
        with(obj_parts){
            if depth=-2.5 &amp;&amp; point_distance(x,y,obj_player.x,obj_player.y)&lt;100{
                gravity=(1/(point_distance(x,y,obj_player.x,obj_player.y)))/2
                gravity_direction=point_direction(x,y,obj_player.x,obj_player.y)//
            }
        }
    }
    
    
    
    
    
    
    var release=false;
    if os_type=os_android{
        if obj_joystick.pdrag=true &amp;&amp; obj_joystick.dragging=false{
            release=true
        }
    }
    
    if (mouse_check_button_released(mb_left) or gamepad_button_check_released(0,gp_shoulderrb) || release=true) &amp;&amp; canshoot=1 &amp;&amp; pcanShoot=1 &amp;&amp; global.GunShovelToggle=1{
        switch(gun){
            case 4:
                ///Crits///
                var CritHit=false
                damagemult=1;
                var temp=round((money/moneyCheckMult)/1000);
                if gun=1 || gun=3{
                    damagemult+=(temp*(player_GemDamageMult*0.1))
                }else{
                    damagemult+=(temp*player_GemDamageMult)
                }
                
                if irandom(100)&lt;Crits*100{
                    damagemult=damagemult*2
                    CritHit=true
                }
                audio_stop_sound(snd_charge)
                audio_play_sound(choose(snd_plasm0,snd_plasm1,snd_plasm2,snd_plasm3),3,0)
                repeat(BulletCount){
                    //sound_stop(snd_charge)
                    //sound_play(choose(snd_plasm0,snd_plasm1,snd_plasm2,snd_plasm3))
                    canshoot=0
                    var reload=(60)-BulletShoot;
                    if reload&lt;1{reload=1}
                    alarm[3]=60
                    nn=instance_create(obj_player.x+lengthdir_x(10,dir),obj_player.y+lengthdir_y(10,dir),obj_bullet4)
                    nn.direction=dir+random(abs(-1/BulletCount)*2)
                    nn.speed=0
                    nn.speed2=6
                    nn.image_xscale=xscale*gunxscale
                    nn.image_yscale=gunyscale
                    nn.damage=(plasmaGunCharge/3.5)*obj_control.damagemult
                    if CritHit=true{nn.Crit=true}
                    nn.canbreak=1
                    push=-3
                    plasmaGunCharge=0
                    obj_player.movespeed=1.5
                    obj_player.jumpheight=7
                    if global.ONLINE=true{
                        clearbuffer()
                        writebyte(20)
                        writebyte(gun)
                        writeshort(nn.direction)
                        writeshort(obj_player.x+lengthdir_x(10,dir))
                        writeshort(obj_player.y+lengthdir_y(10,dir))
                        writebyte(nn.speed)
                        writebyte(nn.speed2)
                        writefloat(nn.image_xscale+20)
                        writefloat(nn.image_yscale+20)
                        writefloat(nn.damage)
                        sendmessage(global.clienttcp)
                        
                    }
                }
            break;
            
        }
    
    }
        
    
    
    

    
    
    if alarm[3]&gt;(room_speed/2)-5 &amp;&amp; gun=0{
        draw_set_color(c_white)
        draw_set_alpha(1)
        draw_rectangle(-5,-5,room_width+5,room_height+5,false)
    }
    
    
}
    
    
    
    
}


if alarm[6]=-1{
    if (!mouse_check_button(mb_left) &amp;&amp; !gamepad_button_check(0,gp_shoulderrb)){
        if heat&gt;0{
            heat--
        }else{heat=0}
    }
}

if alarm[4]!=-1{
    draw_set_color(c_yellow)
    draw_set_alpha(1)
    draw_set_font(fnt_pixel0)
    draw_text(room_width/2,room_height/2,"Level Up!")
}


/////////////////////////////////BLACKNESS OF DEATH/////////////////////////////////
if global.death_start=true{
    draw_set_color(c_black)
    draw_set_alpha(1)
    draw_rectangle(0,0,room_width,global.death_y,false)
    
    if instance_exists(obj_block3) &amp;&amp; global.keyGot=false{
        draw_set_color(c_white)
        draw_set_font(global.font0)
        draw_set_alpha(1)
        draw_set_halign(fa_center)
        draw_text((room_width/2)+random_range(-2,2),(room_height/2)+random_range(-2,2),"!!Key Required!!")
    }else{
        if instance_exists(obj_block3){
            draw_set_color(c_white)
            draw_set_font(global.font0)
            draw_set_alpha(1)
            draw_set_halign(fa_center)
            draw_text((room_width/2)+random_range(-2,2),(room_height/2)+random_range(-2,2),"!!Get Out!!")
        }
    }
}
if room!=rm_menu{
    
    scr_drawDead();
}

///////////////////////////////////////////POWERUP TEXT/////////////////////////////////////////////
var Pyy=0;
for(i=0;i&lt;10;i++){
    if powerupLife[i]&gt;0{
        powerupLife[i]--
        draw_set_alpha(1)
        if instance_exists(obj_player){
            if obj_player.x&gt;2
            &amp;&amp; obj_player.y&gt;2+Pyy-15
            &amp;&amp; obj_player.x&lt;12+25+(string_width(poweruptxt2[i])*0.333)
            &amp;&amp; obj_player.y&lt;2+Pyy+32+15{
                draw_set_alpha(0.25)
            }
        }
        draw_set_font(global.font0) 
        draw_sprite_part(spr_messagebox,0,0,0,10,sprite_get_height(spr_messagebox),2,2+Pyy)
        draw_sprite_stretched(spr_messagebox2,0,12,2+Pyy,25+(string_width(poweruptxt2[i])*0.333),sprite_get_height(spr_messagebox))
        draw_sprite_part(spr_messagebox,0,54,0,10,sprite_get_height(spr_messagebox),12+25+(string_width(poweruptxt2[i])*0.333),2+Pyy)
        
        draw_set_color(c_white)
        draw_text_ext_transformed(35,8+Pyy,poweruptxt[i],5,9999,0.5,0.5,0)
        draw_text_ext_transformed(35,21+Pyy,poweruptxt2[i],12,999999,0.333,0.333,0)
        
        if string_count("player",sprite_get_name(powerupspr[i]))&gt;0{
            draw_sprite_stretched(powerupspr[i],0,8+4,10+Pyy-2,12,19)
        }else{
            draw_sprite_stretched(powerupspr[i],0,8,10+Pyy,16,16)
        }
            
        Pyy+=32
    }else{
        if powerupspr[i]!=-1{
            powerupAlpha[i]-=0.025
            draw_set_alpha(powerupAlpha[i])
            if instance_exists(obj_player){
                if obj_player.x&gt;2
                &amp;&amp; obj_player.y&gt;2+Pyy-15
                &amp;&amp; obj_player.x&lt;12+25+(string_width(poweruptxt2[i])*0.333)
                &amp;&amp; obj_player.y&lt;2+Pyy+32+15{
                    draw_set_alpha(powerupAlpha[i]/4)
                }
            }
            draw_set_font(global.font0) 
            draw_sprite_part(spr_messagebox,0,0,0,10,sprite_get_height(spr_messagebox),2,2+Pyy)
            draw_sprite_stretched(spr_messagebox2,0,12,2+Pyy,25+(string_width(poweruptxt2[i])*0.333),sprite_get_height(spr_messagebox))
            draw_sprite_part(spr_messagebox,0,54,0,10,sprite_get_height(spr_messagebox),12+25+(string_width(poweruptxt2[i])*0.333),2+Pyy)
            
            draw_set_color(c_white)
            draw_text_ext_transformed(35,8+Pyy,poweruptxt[i],5,9999,0.5,0.5,0)
            draw_text_ext_transformed(35,21+Pyy,poweruptxt2[i],12,999999,0.333,0.333,0)
            if string_count("player",sprite_get_name(powerupspr[i]))&gt;0{
                draw_sprite_stretched(powerupspr[i],0,8+4,10+Pyy-2,12,19)
            }else{
                draw_sprite_stretched(powerupspr[i],0,8,10+Pyy,16,16)
            }
            if powerupAlpha[i]&lt;0{
                powerupAlpha[i]=1
                powerupspr[i]=-1
            }
            Pyy+=32
        }
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>2,2</point>
    <point>2,2</point>
  </PhysicsShapePoints>
</object>
