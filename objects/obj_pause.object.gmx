<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_number(obj_pause)&gt;1{instance_destroy() exit}

pause=0

spr=-1
sound=-1

dub=false
pressed=false

pscore=string_invert("0")
_score=0

doubleclick=0


CheatConsole=false
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///NewPause

gui_width=960
gui_height=544
display_set_gui_size(gui_width,gui_height)

PauseDraw=false

select0=0

//Options menu 1
op[0]="Resume"
opx[0]=0
opy[0]=50
opa[0]=0
op[1]="Options"
opx[1]=0
opy[1]=50
opa[1]=0
op[2]="Restart"
opx[2]=0
opy[2]=50
opa[2]=0
op[3]="Quit"
opx[3]=0
opy[3]=50
opa[3]=0

op0Select=-1
tweenop=0


//background
for(i=0;i&lt;15;i+=1){
    backx[i]=0
    backy[i]=-500
    backc[i]=2368548
    
    backxx[i]=0
    backyy[i]=0
}

backxx[0]=(gui_width/2)-120  backyy[0]=-250
backxx[1]=(gui_width/2)-110  backyy[1]=-400
backxx[2]=(gui_width/2)-100  backyy[2]=-350

backxx[3]=(gui_width/2)-65  backyy[3]=-225
backxx[4]=(gui_width/2)-75  backyy[4]=-275
backxx[5]=(gui_width/2)-55  backyy[5]=-295
backxx[6]=(gui_width/2)-45  backyy[6]=-200

backxx[7]=(gui_width/2)  backyy[7]=-50
backxx[8]=(gui_width/2)+10  backyy[8]=-300

backxx[9]=(gui_width/2)+40  backyy[9]=-225
backxx[10]=(gui_width/2)+50  backyy[10]=-300
backxx[11]=(gui_width/2)+60  backyy[11]=-250

backxx[13]=(gui_width/2)+100  backyy[13]=-400
backxx[12]=(gui_width/2)+110  backyy[12]=-250

backxx[14]=(gui_width/2)+135  backyy[14]=-450

backc[0]=2368548
backc[1]=1579032

backxoff[0]=0
backxoff[1]=-50
backxoff[2]=-100

tweenbackx=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>doubleclick=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_control.Score=_score*obj_control.moneyCheckMult
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///reset vibration
gamepad_set_vibration(0,0,0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///background
if obj_tuthelp.DrawBackground=true{
if PauseDraw=false &amp;&amp; pause=true &amp;&amp; obj_tuthelp.tut=-1{PauseDraw=true}

if PauseDraw=true{

///background
for(i=0;i&lt;15;i+=1){
    
    //tween
    if pause=true{
        if tweenbackx&gt;i{
            backy[i]+=(backyy[i]-backy[i])/4
        }
    }else{
        backy[i]+=((-600)-backy[i])/4
        tweenbackx=0
        if backy[i]&gt;550{PauseDraw=false}
    }
    tweenbackx+=0.05
    
    //draw the background
    draw_set_color(backc[i])
    draw_set_alpha(1)
    var yy,xx;
    //xx=backxoff[i]
    yy=0;
    //draw rectangles  3026735
    if i!=7{
        draw_set_alpha(0.1)
        draw_rectangle(backxx[i]-4,backy[i]-4,backxx[i]+13+4,backy[i]+500+4,false)
        draw_set_alpha(0.25)
        draw_rectangle(backxx[i]-3,backy[i]-3,backxx[i]+13+3,backy[i]+500+3,false)  
        draw_set_alpha(0.35)
        draw_rectangle(backxx[i]-2,backy[i]-2,backxx[i]+13+2,backy[i]+500+2,false) 
        draw_set_alpha(0.5)
        draw_rectangle(backxx[i]-1,backy[i]-1,backxx[i]+13+1,backy[i]+500+1,false)  
        
        draw_set_alpha(1)
        draw_rectangle_color(backxx[i],backy[i],backxx[i]+13,backy[i]+500,
        1446931,1446931,4276545,4276545,false)
    }else{
        draw_set_alpha(0.1)
        draw_rectangle(backxx[i]-4,backy[i]-4,backxx[i]+13+4,backy[i]+500+4,false)
        draw_set_alpha(0.25)
        draw_rectangle(backxx[i]-3,backy[i]-3,backxx[i]+13+3,backy[i]+500+3,false)  
        draw_set_alpha(0.35)
        draw_rectangle(backxx[i]-2,backy[i]-2,backxx[i]+13+2,backy[i]+500+2,false) 
        draw_set_alpha(0.5)
        draw_rectangle(backxx[i]-1,backy[i]-1,backxx[i]+13+1,backy[i]+500+1,false)  
        
        draw_set_alpha(1)
        draw_rectangle_color(backxx[i],backy[i],backxx[i]+13,backy[i]+500,
        10924,10924,80328,80328,false)  
    }
}



/*
for(i=0;i&lt;3;i+=1){
    
    if pause=true{
        //tween
        if tweenbackx&gt;i{
            backx[i]+=((gui_width-50)-backx[i])/4
        }
        tweenbackx+=0.05
    }else{
        backx[i]+=((0)-backx[i])/4
        tweenbackx=0
        if backx[i]&lt;0.1{PauseDraw=false}
    }
    
    //draw the background
    draw_set_color(backc[i])
    draw_set_alpha(1)
    var yy,xx;
    xx=backxoff[i]
    yy=gui_height/2;
    //draw the triangles
    draw_primitive_begin(pr_trianglelist)
    draw_vertex(backx[i]-250+xx,backy[i])
    draw_vertex(backx[i]+xx,backy[i]+yy)
    draw_vertex(backx[i]-250+xx,backy[i]+gui_height)
    draw_primitive_end();
    //draw rectangles
    draw_rectangle(backx[i]-250+xx,backy[i],0,backy[i]+gui_height,false)
}
*/



}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///options0
if obj_tuthelp.DrawBackground=true{
if PauseDraw=true{

if gamepad_button_check_released(0,gp_padu){
    select0--
    if select0&lt;0{select0=3}
}

if gamepad_button_check_released(0,gp_padd){
    select0++
    if select0&gt;3{select0=0}
}



for(i=0;i&lt;4;i+=1){
        
    if pause=true{
        //tween
        if tweenop&gt;i+2 &amp;&amp; op0Select=-1{
            opy[i]+=(0-opy[i])/4
            opa[i]+=(1-opa[i])/4
        }else{
            opy[i]+=(50-opy[i])/4
            opa[i]+=(0-opa[i])/4
        }
        tweenop+=0.05
    }else{
        tweenop=0
        opy[i]+=(50-opy[i])/4
        opa[i]+=(0-opa[i])/4
    }
    
    
    //draw the background
    draw_set_color(1776411)
    draw_set_alpha(opa[i])
    var yy,xx;
    xx=gui_width/2
    yy=(gui_height/2)-200+(i*125);
    //draw the text
    draw_set_halign(fa_center)
    draw_set_valign(fa_center)
    draw_set_font(fnt_norm)
    draw_set_color(c_white)
    draw_text(xx+opx[i],yy+opy[i],op[i])
    if select0=i &amp;&amp; global.GamePadMouse=1 &amp;&amp; pause=true &amp;&amp; obj_tuthelp.tut!=998{
        draw_rectangle_width(xx+opx[i]-(string_width(op[i])/2)-5,yy+opy[i]-(string_height(op[i])/2)-5,
        xx+opx[i]+(string_width(op[i])/2)+5,yy+opy[i]+(string_height(op[i])/2),5)
        if gamepad_button_check_released(0,gp_face3){
            switch(i){
                case 0:
                pause=0
                break;
                
                case 1:
                obj_tuthelp.tut=998
                obj_tuthelp.alarm[7]=5
                break;
                
                case 2:
                show_question2("Are you sure you want to restart?")
                break;
                
                case 3:
                show_question2("Are you sure you want to exit?")
                break;
                
                
            }
        }
    }
    
    draw_set_valign(fa_top)
    var xxx,yyy,www,hhh;
    xxx=xx+opx[i]
    yyy=yy+opy[i]
    www=string_width(op[i])
    hhh=string_height(op[i])
    if pause=true &amp;&amp; obj_tuthelp.tut!=998{
    if scr_click3(xxx-(www/2),yyy-(hhh/2),xxx+(www/2),yyy+(hhh/2)){
        switch(i){
            case 0:
            pause=0
            break;
            
            case 1:
            obj_tuthelp.tut=998
            break;
            
            case 2:
            show_question2("Are you sure you want to restart?")
            break;
            
            case 3:
            show_question2("Are you sure you want to exit?")
            break;
            
            
        }
    }
    }
    www=250
    draw_line_width((xxx-(www/2)*opa[i]),yyy+(hhh/2),(xxx+(www/2)*opa[i]),yyy+(hhh/2),3)
    
}
}
if global.AnsweredQuestion=true
&amp;&amp; global.MyQuestion="Are you sure you want to exit?"{
    if global.AnsweredQuestionResult=true{
        game_end()
    }
    global.AnsweredQuestion=false
}

if global.AnsweredQuestion=true
&amp;&amp; global.MyQuestion="Are you sure you want to restart?"{
    if global.AnsweredQuestionResult=true{
        game_restart()
    }
    global.AnsweredQuestion=false
}


}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pressed=false
if (keyboard_check_released(vk_enter)
|| keyboard_check_released(vk_tab)
|| keyboard_check_released(vk_escape)
|| gamepad_button_check_pressed(0, gp_start))
&amp;&amp; (obj_tuthelp.tut!=998 &amp;&amp; obj_tuthelp.tut!=999){pause=!pause pressed=true}

if os_is_paused()=true &amp;&amp; global.ONLINE=false{
    if pause=false{pause=true}
}


if CheatConsole=true{
    if !instance_exists(obj_control){
        instance_activate_object(obj_control)
    }
    if obj_control.CheatConsole=true{
        pause=false
        draw_console();
    }
}

//Apply Cheats
if instance_exists(obj_control){
    if obj_control.GodMode=true{
        obj_control.player_health=obj_control.player_maxhealth
    }
}


if pause=1 &amp;&amp; spr=-1 &amp;&amp; global.ONLINE=false{
    if os_type=os_android{
    screen_save("temp.png")
    spr=sprite_add("temp.png",0,0,0,0,0)
    file_delete("temp.png")
    }else{
    //surf=surface_create(view_wview*2,view_hview*2)
    //surface_copy(surf,0,0,application_surface)
    //spr=sprite_create_from_surface(surf,0,0,view_wview*2,view_hview*2,0,0,0,0)
    
    spr=sprite_create_from_surface(application_surface,0,0,view_wview*2,view_hview*2,0,0,0,0)
    
    //surface_free(surf)
    }
    
    sound=obj_sound.currentMainSound
    audio_pause_sound(sound)
    
    _score=obj_control.Score/obj_control.moneyCheckMult
    pscore=string_invert(string(_score))
    
    if obj_tuthelp.tut=-1 &amp;&amp; irandom(20)=4 &amp;&amp; pressed=true{dub=true
    if DUBSTEP=true{
        audio_stop_all()
        audio_play_sound(snd_dubstep,1,99)
        view_xview+=25
        view_yview+=25
        view_wview-=50
        view_hview-=50
        if obj_tuthelp.tut!=-1 &amp;&amp; obj_tuthelp.tut!=999{
            obj_tuthelp.tut=-1
            pause=0
        }else{
            if obj_tuthelp.tut!=-1{
                pause=0
            }
        }
        
    }
    }
    
    
    instance_deactivate_all(true)
    instance_activate_object(obj_tuthelp)
    instance_activate_object(obj_server)
    instance_activate_object(obj_client)
    instance_activate_object(obj_client2)
    instance_activate_object(obj_highscoresign)
    instance_activate_object(obj_mouse)
}
if pause=1 &amp;&amp; spr!=-1{
    if sprite_exists(spr){
        draw_sprite_ext(spr,0,0,0,0.5,0.5,0,c_white,1)
        draw_set_alpha(0.8)
        draw_set_color(c_black)
        draw_rectangle(0,0,room_width,room_height,false)
        draw_set_color(c_white)
        draw_set_alpha(1)
        draw_set_halign(fa_center)
        draw_set_font(global.font0)
        //draw_text(room_width/2,15,"Paused")
        if os_type!=os_android{
        if global.GamePadMouse=0{
            //draw_text(room_width/2,(room_height-55),"Press Escape to Resume")
        }else{
            //draw_text(room_width/2,(room_height-55),"Press Start to Resume")
        }
        }else{
            //draw_text(room_width/2,(room_height-55),"Double Tap to Resume")
            
            if mouse_check_button_pressed(mb_left){
                if doubleclick=0{
                    doubleclick++
                    alarm[11]=room_speed/2
                }else{
                    //pause=false
                }
                //pause=false
            }
        }
        
        //draw new pause menu
        if string(_score)!=string_invert(pscore){
            show_message("Please no hacks  :)")
            _score=real(string_invert(pscore))
        }
        if obj_tuthelp.tut=-1{
        /*
        draw_set_color(c_white)
        draw_set_alpha(1)
        draw_set_font(global.font0)
        draw_set_halign(fa_center)
        draw_text(room_width/2,45,"Score: "+string(scr_getnumber(round(_score))))
        
        //options
        if scr_hover((view_wview/2)-string_width("Restart")/2,(view_hview/2),((view_wview/2)+string_width("Restart")/2)+7,(view_hview/2)+25){
            draw_set_alpha(0.9)
            draw_set_color(10979719)
            draw_rectangle((view_wview/2)-string_width("Restart")/2,(view_hview/2),((view_wview/2)+string_width("Restart")/2)+7,(view_hview/2)+25,false)
            draw_set_color(13285559)
            draw_rectangle(((view_wview/2)-string_width("Restart")/2)+1,(view_hview/2)+1,((view_wview/2)+string_width("Restart")/2)-1+7,((view_hview/2)+25)-1,false)
            draw_set_color(7558741)
            draw_rectangle(((view_wview/2)-string_width("Restart")/2)+2,(view_hview/2)+2,((view_wview/2)+string_width("Restart")/2)-2+7,((view_hview/2)+25)-2,false)
            if mouse_check_button_released(mb_left){
                if show_question("Are you sure you want to restart?")=true{
                    game_restart()
                }
            }
            
        }
        if scr_hover((view_wview/2)-string_width("Restart")/2,(view_hview/2)+35,((view_wview/2)+string_width("Restart")/2)+7,(view_hview/2)+25+35){
            draw_set_alpha(0.9)
            draw_set_color(10979719)
            draw_rectangle((view_wview/2)-string_width("Restart")/2,(view_hview/2)+35,((view_wview/2)+string_width("Restart")/2)+7,(view_hview/2)+25+35,false)
            draw_set_color(13285559)
            draw_rectangle(((view_wview/2)-string_width("Restart")/2)+1,(view_hview/2)+1+35,((view_wview/2)+string_width("Restart")/2)-1+7,((view_hview/2)+25)-1+35,false)
            draw_set_color(7558741)
            draw_rectangle(((view_wview/2)-string_width("Restart")/2)+2,(view_hview/2)+2+35,((view_wview/2)+string_width("Restart")/2)-2+7,((view_hview/2)+25)-2+35,false)
            if mouse_check_button_released(mb_left){
                if show_question("Are you sure you want to exit?")=true{
                    game_end()
                }
            }
        }
        
        if scr_hover((view_wview/2)-string_width("Restart")/2,(view_hview/2)-35,((view_wview/2)+string_width("Restart")/2)+7,(view_hview/2)+25-35){
            draw_set_alpha(0.9)
            draw_set_color(10979719)
            draw_rectangle((view_wview/2)-string_width("Restart")/2,(view_hview/2)-35,((view_wview/2)+string_width("Restart")/2)+7,(view_hview/2)+25-35,false)
            draw_set_color(13285559)
            draw_rectangle(((view_wview/2)-string_width("Restart")/2)+1,(view_hview/2)+1-35,((view_wview/2)+string_width("Restart")/2)-1+7,((view_hview/2)+25)-1-35,false)
            draw_set_color(7558741)
            draw_rectangle(((view_wview/2)-string_width("Restart")/2)+2,(view_hview/2)+2-35,((view_wview/2)+string_width("Restart")/2)-2+7,((view_hview/2)+25)-2-35,false)
            if mouse_check_button_released(mb_left){
                pause=0
            }
        }
        
        
        
        draw_set_color(c_white)
        draw_set_alpha(1)
        draw_text(view_wview/2,(view_hview/2)-35,"Resume")
        draw_text(view_wview/2,view_hview/2,"Restart")
        draw_text(view_wview/2,(view_hview/2)+35,"Exit")
        */
        }
        
        
        if obj_tuthelp.tut=-1{
        if DUBSTEP=true &amp;&amp; dub=true{
            instance_create(random(room_width),random(room_height),obj_lol)
            scr_shake3()
            if view_xview&lt;5{view_xview+=25}
            if view_yview&lt;5{view_yview+=25}
            if view_xview&gt;50{view_xview-=25}
            if view_yview&gt;50{view_yview-=25}
            obj_tuthelp.tut=-1
        }
        }
        
    }else{
        screen_save("temp.png")
        spr=sprite_add("temp.png",0,0,0,0,0)
        file_delete("temp.png")
    }
}


if pause=0 &amp;&amp; spr!=-1{
        if obj_tuthelp.tut=-1{
        if DUBSTEP=true{
            audio_stop_sound(snd_dubstep)
            view_xview=0
            view_yview=0
            view_wview=room_width
            view_hview=room_height
            with(obj_lol){instance_destroy()}
            with(obj_screenshake2){instance_destroy()}
            //audio_play_sound(snd_main,1,99)
        }
        }
        dub=false
    sprite_delete(spr)
    audio_resume_sound(sound)
    spr=-1
    instance_activate_all()
    
    with(all){
        vspeed=0
        gravity=0
    }
    alarm[1]=1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
